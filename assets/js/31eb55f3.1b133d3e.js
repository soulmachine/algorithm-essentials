"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[8057],{19405:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>s,default:()=>v,frontMatter:()=>u,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"binary-tree/traversal/recover-binary-search-tree","title":"Recover Binary Search Tree","description":"\u63cf\u8ff0","source":"@site/docs/binary-tree/traversal/recover-binary-search-tree.md","sourceDirName":"binary-tree/traversal","slug":"/binary-tree/traversal/recover-binary-search-tree","permalink":"/binary-tree/traversal/recover-binary-search-tree","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Recover Binary Search Tree"},"sidebar":"docs","previous":{"title":"Binary Search Tree Iterator","permalink":"/binary-tree/traversal/binary-search-tree-iterator"},"next":{"title":"Same Tree","permalink":"/binary-tree/traversal/same-tree"}}');var l=n(74848),a=n(28453),o=n(11470),i=n(19365);const u={title:"Recover Binary Search Tree"},s=void 0,c={},d=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4e2d\u5e8f\u904d\u5386\uff0c\u9012\u5f52\u65b9\u5f0f",id:"\u4e2d\u5e8f\u904d\u5386\u9012\u5f52\u65b9\u5f0f",level:3},{value:"Morris \u4e2d\u5e8f\u904d\u5386",id:"morris-\u4e2d\u5e8f\u904d\u5386",level:3},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",level:3}];function p(e){const r={a:"a",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(r.h3,{id:"\u63cf\u8ff0",children:"\u63cf\u8ff0"}),"\n",(0,l.jsx)(r.p,{children:"Two elements of a binary search tree (BST) are swapped by mistake."}),"\n",(0,l.jsx)(r.p,{children:"Recover the tree without changing its structure."}),"\n",(0,l.jsxs)(r.p,{children:["Note: A solution using ",(0,l.jsx)(r.code,{children:"O(n)"})," space is pretty straight forward. Could you devise a constant space solution?"]}),"\n",(0,l.jsx)(r.h3,{id:"\u5206\u6790",children:"\u5206\u6790"}),"\n",(0,l.jsxs)(r.p,{children:[(0,l.jsx)(r.code,{children:"O(logn)"}),"\u7a7a\u95f4\u7684\u89e3\u6cd5\u662f\uff0c\u4e2d\u5e8f\u9012\u5f52\u904d\u5386\uff0c\u7528\u4e24\u4e2a\u6307\u9488\u5b58\u653e\u5728\u904d\u5386\u8fc7\u7a0b\u4e2d\u78b0\u5230\u7684\u4e24\u5904\u9006\u5411\u7684\u4f4d\u7f6e\u3002"]}),"\n",(0,l.jsxs)(r.p,{children:["\u672c\u9898\u8981\u6c42",(0,l.jsx)(r.code,{children:"O(1)"}),"\u7a7a\u95f4\uff0c\u53ea\u80fd\u7528 Morris \u4e2d\u5e8f\u904d\u5386\u3002"]}),"\n",(0,l.jsx)(r.h3,{id:"\u4e2d\u5e8f\u904d\u5386\u9012\u5f52\u65b9\u5f0f",children:"\u4e2d\u5e8f\u904d\u5386\uff0c\u9012\u5f52\u65b9\u5f0f"}),"\n","\n",(0,l.jsxs)(o.A,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],children:[(0,l.jsx)(i.A,{value:"java",children:(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:"// Recover Binary Search Tree\n// \u4e2d\u5e8f\u904d\u5386,\u9012\u5f52\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(logn)\n// \u672c\u4ee3\u7801\u4ec5\u4ec5\u662f\u4e3a\u4e86\u5e2e\u52a9\u7406\u89e3\u9898\u76ee\npublic class Solution {\n    private TreeNode p1 = null;\n    private TreeNode p2 = null;\n    private TreeNode prev = null;\n\n    public void recoverTree(TreeNode root) {\n        inOrder( root);\n        // swap\n        int tmp = p1.val;\n        p1.val = p2.val;\n        p2.val = tmp;\n    }\n\n    private void inOrder(TreeNode root) {\n        if ( root ==  null ) return;\n        if ( root.left != null ) inOrder(root.left);\n\n        if ( prev != null && root.val < prev.val ) {\n            if ( p1 == null) {\n                p1 = prev;\n                p2 = root;\n            } else {\n                p2 = root;\n            }\n        }\n        prev = root;\n        if ( root.right != null ) inOrder(root.right);\n    }\n}\n"})})}),(0,l.jsx)(i.A,{value:"cpp",children:(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-cpp",children:"// Recover Binary Search Tree\n// \u4e2d\u5e8f\u904d\u5386,\u9012\u5f52\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(logn)\n// \u672c\u4ee3\u7801\u4ec5\u4ec5\u662f\u4e3a\u4e86\u5e2e\u52a9\u7406\u89e3\u9898\u76ee\nclass Solution {\npublic:\n    void recoverTree(TreeNode *root) {\n        inOrder( root);\n        swap(p1->val, p2->val);\n    }\nprivate:\n    void inOrder(TreeNode *root) {\n        if ( root ==  nullptr ) return;\n        if ( root->left != nullptr ) inOrder(root->left);\n\n        if ( prev != nullptr && root->val < prev->val ) {\n            if ( p1 == nullptr) {\n                p1 = prev;\n                p2 = root;\n            } else {\n                p2 = root;\n            }\n        }\n        prev = root;\n        if ( root->right != nullptr ) inOrder(root->right);\n    }\n    TreeNode *p1 = nullptr;\n    TreeNode *p2 = nullptr;\n    TreeNode *prev = nullptr;\n};\n"})})})]}),"\n",(0,l.jsx)(r.h3,{id:"morris-\u4e2d\u5e8f\u904d\u5386",children:"Morris \u4e2d\u5e8f\u904d\u5386"}),"\n",(0,l.jsxs)(o.A,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],children:[(0,l.jsx)(i.A,{value:"java",children:(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:"// Recover Binary Search Tree\n// Morris\u4e2d\u5e8f\u904d\u5386\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(1)\npublic class Solution {\n    public void recoverTree(TreeNode root) {\n        TreeNode[] broken = new TreeNode[2];\n        TreeNode prev = null;\n        TreeNode cur = root;\n\n        while (cur != null) {\n            if (cur.left == null) {\n                detect(broken, prev, cur);\n                prev = cur;\n                cur = cur.right;\n            } else {\n                TreeNode node = cur.left;\n\n                while (node.right != null && node.right != cur)\n                    node = node.right;\n\n                if (node.right == null) {\n                    node.right = cur;\n                    //prev = cur; \u4e0d\u80fd\u6709\u8fd9\u53e5\uff01\u56e0\u4e3acur\u8fd8\u6ca1\u6709\u88ab\u8bbf\u95ee\n                    cur = cur.left;\n                } else {\n                    detect(broken, prev, cur);\n                    node.right = null;\n                    prev = cur;\n                    cur = cur.right;\n                }\n            }\n        }\n        // swap\n        int tmp = broken[0].val;\n        broken[0].val = broken[1].val;\n        broken[1].val = tmp;\n    }\n\n    void detect(TreeNode[] broken, TreeNode prev,\n                TreeNode current) {\n        if (prev != null && prev.val > current.val) {\n            if (broken[0] == null) {\n                broken[0] = prev;\n            } //\u4e0d\u80fd\u7528else\uff0c\u4f8b\u5982 {0,1}\uff0c\u4f1a\u5bfc\u81f4\u6700\u540e swap\u65f6second\u4e3anullptr\uff0c\n            //\u4f1a Runtime Error\n            broken[1] = current;\n        }\n    }\n}\n"})})}),(0,l.jsx)(i.A,{value:"cpp",children:(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-cpp",children:"// Recover Binary Search Tree\n// Morris\u4e2d\u5e8f\u904d\u5386\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(1)\nclass Solution {\npublic:\n    void recoverTree(TreeNode* root) {\n        pair<TreeNode*, TreeNode*> broken;\n        TreeNode* prev = nullptr;\n        TreeNode* cur = root;\n\n        while (cur != nullptr) {\n            if (cur->left == nullptr) {\n                detect(broken, prev, cur);\n                prev = cur;\n                cur = cur->right;\n            } else {\n                auto node = cur->left;\n\n                while (node->right != nullptr && node->right != cur)\n                    node = node->right;\n\n                if (node->right == nullptr) {\n                    node->right = cur;\n                    //prev = cur; \u4e0d\u80fd\u6709\u8fd9\u53e5\uff01\u56e0\u4e3acur\u8fd8\u6ca1\u6709\u88ab\u8bbf\u95ee\n                    cur = cur->left;\n                } else {\n                    detect(broken, prev, cur);\n                    node->right = nullptr;\n                    prev = cur;\n                    cur = cur->right;\n                }\n            }\n        }\n\n        swap(broken.first->val, broken.second->val);\n    }\n\n    void detect(pair<TreeNode*, TreeNode*>& broken, TreeNode* prev,\n            TreeNode* current) {\n        if (prev != nullptr && prev->val > current->val) {\n            if (broken.first == nullptr) {\n                broken.first = prev;\n            } //\u4e0d\u80fd\u7528else\uff0c\u4f8b\u5982 {0,1}\uff0c\u4f1a\u5bfc\u81f4\u6700\u540e swap\u65f6second\u4e3anullptr\uff0c\n              //\u4f1a Runtime Error\n            broken.second = current;\n        }\n    }\n};\n"})})})]}),"\n",(0,l.jsx)(r.h3,{id:"\u76f8\u5173\u9898\u76ee",children:"\u76f8\u5173\u9898\u76ee"}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsx)(r.li,{children:(0,l.jsx)(r.a,{href:"/binary-tree/traversal/binary-tree-inorder-traversal",children:"Binary Tree Inorder Traversal"})}),"\n"]})]})}function v(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,l.jsx)(r,{...e,children:(0,l.jsx)(p,{...e})}):p(e)}},19365:(e,r,n)=>{n.d(r,{A:()=>o});n(96540);var t=n(34164);const l={tabItem:"tabItem_Ymn6"};var a=n(74848);function o(e){let{children:r,hidden:n,className:o}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,t.A)(l.tabItem,o),hidden:n,children:r})}},11470:(e,r,n)=>{n.d(r,{A:()=>j});var t=n(96540),l=n(34164),a=n(23104),o=n(56347),i=n(205),u=n(57485),s=n(31682),c=n(70679);function d(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:r,children:n}=e;return(0,t.useMemo)((()=>{const e=r??function(e){return d(e).map((e=>{let{props:{value:r,label:n,attributes:t,default:l}}=e;return{value:r,label:n,attributes:t,default:l}}))}(n);return function(e){const r=(0,s.XI)(e,((e,r)=>e.value===r.value));if(r.length>0)throw new Error(`Docusaurus error: Duplicate values "${r.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[r,n])}function v(e){let{value:r,tabValues:n}=e;return n.some((e=>e.value===r))}function h(e){let{queryString:r=!1,groupId:n}=e;const l=(0,o.W6)(),a=function(e){let{queryString:r=!1,groupId:n}=e;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:r,groupId:n});return[(0,u.aZ)(a),(0,t.useCallback)((e=>{if(!a)return;const r=new URLSearchParams(l.location.search);r.set(a,e),l.replace({...l.location,search:r.toString()})}),[a,l])]}function b(e){const{defaultValue:r,queryString:n=!1,groupId:l}=e,a=p(e),[o,u]=(0,t.useState)((()=>function(e){let{defaultValue:r,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!v({value:r,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${r}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return r}const t=n.find((e=>e.default))??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:r,tabValues:a}))),[s,d]=h({queryString:n,groupId:l}),[b,f]=function(e){let{groupId:r}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(r),[l,a]=(0,c.Dv)(n);return[l,(0,t.useCallback)((e=>{n&&a.set(e)}),[n,a])]}({groupId:l}),m=(()=>{const e=s??b;return v({value:e,tabValues:a})?e:null})();(0,i.A)((()=>{m&&u(m)}),[m]);return{selectedValue:o,selectValue:(0,t.useCallback)((e=>{if(!v({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);u(e),d(e),f(e)}),[d,f,a]),tabValues:a}}var f=n(92303);const m={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=n(74848);function T(e){let{className:r,block:n,selectedValue:t,selectValue:o,tabValues:i}=e;const u=[],{blockElementScrollPositionUntilNextRender:s}=(0,a.a_)(),c=e=>{const r=e.currentTarget,n=u.indexOf(r),l=i[n].value;l!==t&&(s(r),o(l))},d=e=>{let r=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;r=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;r=u[n]??u[u.length-1];break}}r?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":n},r),children:i.map((e=>{let{value:r,label:n,attributes:a}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:t===r?0:-1,"aria-selected":t===r,ref:e=>u.push(e),onKeyDown:d,onClick:c,...a,className:(0,l.A)("tabs__item",m.tabItem,a?.className,{"tabs__item--active":t===r}),children:n??r},r)}))})}function x(e){let{lazy:r,children:n,selectedValue:a}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(r){const e=o.find((e=>e.props.value===a));return e?(0,t.cloneElement)(e,{className:(0,l.A)("margin-top--md",e.props.className)}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:o.map(((e,r)=>(0,t.cloneElement)(e,{key:r,hidden:e.props.value!==a})))})}function y(e){const r=b(e);return(0,g.jsxs)("div",{className:(0,l.A)("tabs-container",m.tabList),children:[(0,g.jsx)(T,{...r,...e}),(0,g.jsx)(x,{...r,...e})]})}function j(e){const r=(0,f.A)();return(0,g.jsx)(y,{...e,children:d(e.children)},String(r))}},28453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>i});var t=n(96540);const l={},a=t.createContext(l);function o(e){const r=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),t.createElement(a.Provider,{value:r},e.children)}}}]);