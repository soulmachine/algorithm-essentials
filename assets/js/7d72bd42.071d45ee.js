"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[2841],{80969:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>d,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"dfs/additive-number","title":"Additive Number","description":"\u63cf\u8ff0","source":"@site/docs/dfs/additive-number.md","sourceDirName":"dfs","slug":"/dfs/additive-number","permalink":"/dfs/additive-number","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Additive Number"},"sidebar":"docs","previous":{"title":"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","permalink":"/dfs/"},"next":{"title":"Palindrome Partitioning","permalink":"/dfs/palindrome-partitioning"}}');var s=i(74848),r=i(28453);const d={title:"Additive Number"},o=void 0,a={},c=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3}];function l(n){const e={code:"code",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h3,{id:"\u63cf\u8ff0",children:"\u63cf\u8ff0"}),"\n",(0,s.jsx)(e.p,{children:"Additive number is a string whose digits can form additive sequence."}),"\n",(0,s.jsxs)(e.p,{children:["A valid additive sequence should contain ",(0,s.jsx)(e.strong,{children:"at least"})," three numbers. Except for the first two numbers, each subsequent number in the sequence must be the sum of the preceding two."]}),"\n",(0,s.jsx)(e.p,{children:"For example:"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.code,{children:'"112358"'})," is an additive number because the digits can form an additive sequence: ",(0,s.jsx)(e.code,{children:"1, 1, 2, 3, 5, 8"}),"."]}),"\n",(0,s.jsx)(e.p,{children:"1 + 1 = 2, 1 + 2 = 3, 2 + 3 = 5, 3 + 5 = 8"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.code,{children:'"199100199"'})," is also an additive number, the additive sequence is: ",(0,s.jsx)(e.code,{children:"1, 99, 100, 199"}),"."]}),"\n",(0,s.jsx)(e.p,{children:"1 + 99 = 100, 99 + 100 = 199"}),"\n",(0,s.jsxs)(e.p,{children:["Note: Numbers in the additive sequence cannot have leading zeros, so sequence ",(0,s.jsx)(e.code,{children:"1, 2, 03"})," or ",(0,s.jsx)(e.code,{children:"1, 02, 3"})," is invalid."]}),"\n",(0,s.jsxs)(e.p,{children:["Given a string containing only digits ",(0,s.jsx)(e.code,{children:"'0'-'9'"}),", write a function to determine if it's an additive number."]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Follow up"}),":"]}),"\n",(0,s.jsx)(e.p,{children:"How would you handle overflow for very large input integers?"}),"\n",(0,s.jsx)(e.h3,{id:"\u5206\u6790",children:"\u5206\u6790"}),"\n",(0,s.jsx)(e.p,{children:"\u8fd9\u662f\u4e00\u4e2a\u591a\u9636\u6bb5\u51b3\u7b56\u95ee\u9898\uff0c\u4e14\u5fc5\u987b\u8d70\u5230\u5b57\u7b26\u4e32\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u624d\u80fd\u5f97\u51fa\u7ed3\u8bba\uff0c\u56e0\u6b64\u9002\u5408\u7528\u6df1\u641c\u6216DP\u3002"}),"\n",(0,s.jsx)(e.p,{children:"\u518d\u4ed4\u7ec6\u60f3\u4e00\u4e0b\u72b6\u6001\u8f6c\u6362\u56fe\uff0c\u6bcf\u6b21\u7d22\u5f15\u53d8\u5316\u4e00\u4e0b\uff0c\u5c31\u8ddf\u4e4b\u524d\u7684\u5b8c\u5168\u6ca1\u6709\u91cd\u590d\uff0c\u56e0\u6b64\u72b6\u6001\u8f6c\u6362\u56fe\u662f\u4e00\u9897\u6811\uff0c\u4e0d\u662fDAG\uff0c\u56e0\u6b64\u4e0d\u5b58\u5728\u91cd\u53e0\u5b50\u95ee\u9898\uff0c\u56e0\u6b64\u6392\u9664DP\uff0c\u672c\u9898\u5e94\u8be5\u7528\u6df1\u641c\u3002"}),"\n",(0,s.jsx)(e.h3,{id:"\u4ee3\u7801",children:"\u4ee3\u7801"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-java",children:"// Additive Number\n// \u591a\u5165\u53e3\u6df1\u641c\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n^3)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(1)\npublic class Solution {\n    public boolean isAdditiveNumber(String num) {\n        for (int i = 1; i <= num.length() / 2; ++i) {\n            if (num.charAt(0) == '0' && i > 1) continue;\n            for (int j = i + 1; j < num.length(); ++j) {\n                if (num.charAt(i) == '0' && j - i > 1) continue;\n                if (dfs(num, 0, i, j)) return true;\n            }\n        }\n        return false;\n    }\n\n    // \u5224\u65ad\u4ece [i, j) \u548c [j, k) \u51fa\u53d1,\u80fd\u5426\u8d70\u5230\u5c3d\u5934\n    private static boolean dfs(String num, int i, int j, int k) {\n        long num1 = Long.parseLong(num.substring(i, j));\n        long num2 = Long.parseLong(num.substring(j, k));\n        final String addition = String.valueOf(num1 + num2);\n\n        if (!num.substring(k).startsWith(addition)) return false;\n        if (k + addition.length() == num.length()) return true;\n        return dfs(num, j, k, k + addition.length());\n    }\n}\n"})})]})}function u(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(l,{...n})}):l(n)}},28453:(n,e,i)=>{i.d(e,{R:()=>d,x:()=>o});var t=i(96540);const s={},r=t.createContext(s);function d(n){const e=t.useContext(r);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:d(n.components),t.createElement(r.Provider,{value:e},n.children)}}}]);