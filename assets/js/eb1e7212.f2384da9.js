"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[3966],{65850:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"bitwise-operations/missing-number","title":"Missing Number","description":"\u63cf\u8ff0","source":"@site/docs/bitwise-operations/missing-number.md","sourceDirName":"bitwise-operations","slug":"/bitwise-operations/missing-number","permalink":"/bitwise-operations/missing-number","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Missing Number"},"sidebar":"docs","previous":{"title":"Power of Two","permalink":"/bitwise-operations/power-of-two"},"next":{"title":"Maximum Product of Word Lengths","permalink":"/bitwise-operations/maximum-product-of-word-lengths"}}');var t=i(74848),r=i(28453);const o={title:"Missing Number"},l=void 0,c={},u=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u89e3\u6cd5 1",id:"\u89e3\u6cd5-1",level:3},{value:"\u89e3\u6cd5 2",id:"\u89e3\u6cd5-2",level:3},{value:"\u89e3\u6cd5 3",id:"\u89e3\u6cd5-3",level:3}];function d(n){const e={code:"code",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h3,{id:"\u63cf\u8ff0",children:"\u63cf\u8ff0"}),"\n",(0,t.jsxs)(e.p,{children:["Given an array containing ",(0,t.jsx)(e.code,{children:"n"})," distinct numbers taken from ",(0,t.jsx)(e.code,{children:"0, 1, 2, ..., n"}),", find the one that is missing from the array."]}),"\n",(0,t.jsx)(e.p,{children:"For example,"}),"\n",(0,t.jsxs)(e.p,{children:["Given nums = ",(0,t.jsx)(e.code,{children:"[0, 1, 3]"})," return ",(0,t.jsx)(e.code,{children:"2"}),"."]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Note"}),":"]}),"\n",(0,t.jsx)(e.p,{children:"Your algorithm should run in linear runtime complexity. Could you implement it using only constant extra space complexity?"}),"\n",(0,t.jsx)(e.h3,{id:"\u5206\u6790",children:"\u5206\u6790"}),"\n",(0,t.jsx)(e.p,{children:"\u672c\u9898\u7684\u610f\u601d\u662f\uff0c\u4ece 1 \u5230 n \u7684\u6574\u6570\uff0c\u5176\u4e2d\u67d0\u4e2a\u6570\u4e22\u5931\u4e86\uff0c\u66ff\u4ee3\u5b83\u7684\u662f 0\u3002\u8981\u6211\u4eec\u627e\u51fa\u8fd9\u4e2a\u4e22\u5931\u7684\u6570\u3002"}),"\n",(0,t.jsx)(e.p,{children:"\u65b9\u6cd5 1\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u516c\u5f0f\u8ba1\u7b97\u51fa\u4ece 1 \u5230 n \u7684\u548c\uff0c\u51cf\u53bb\u5b9e\u9645\u6570\u7ec4\u7684\u603b\u548c\uff0c\u5dee\u503c\u5c31\u662f\u90a3\u4e2a\u4e22\u5931\u7684\u6570\u3002"}),"\n",(0,t.jsx)(e.p,{children:"\u65b9\u6cd5 2\uff0c\u5229\u7528\u5f02\u6216\u4f4d\u8fd0\u7b97\uff0c\u628a\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570\uff0c\u4e0e 1 \u5230 n \u8fdb\u884c\u6309\u4f4d\u5f02\u6216\uff0c\u6700\u540e\u5269\u4e0b\u7684\uff0c\u5c31\u662f\u4e22\u5931\u7684\u6570\u3002"}),"\n",(0,t.jsxs)(e.p,{children:["\u65b9\u6cd5 3\uff0c\u4e8c\u5206\u67e5\u627e\u3002\u9996\u5148\u628a\u6570\u7ec4\u6392\u5e8f\uff0c\u8bbe\u4e2d\u95f4\u5143\u7d20\u4e3a",(0,t.jsx)(e.code,{children:"nums[mid]"}),"\uff0c\u5982\u679c",(0,t.jsx)(e.code,{children:"nums[mid]"}),"\u7684\u503c\u5927\u4e8e\u5176\u4e0b\u6807\uff0c\u8bf4\u660e\u4e22\u5931\u7684\u6570\u5b57\u5728\u5de6\u8fb9\uff0c\u53cd\u4e4b\u5219\u5728\u53f3\u8fb9\u3002\u65f6\u95f4\u590d\u6742\u5ea6",(0,t.jsx)(e.code,{children:"O(nlogn)"}),"\uff0c\u6bd4\u524d\u9762\u4e24\u4e2a\u65b9\u6cd5\u6162\uff0c\u4f46\u662f\u5982\u679c\u9898\u76ee\u7ed9\u7684\u6570\u7ec4\u662f\u4e8b\u5148\u6392\u597d\u5e8f\u7684\uff0c\u90a3\u4e48\u590d\u6742\u5ea6\u5c31\u662f",(0,t.jsx)(e.code,{children:"O(log n)"}),"\uff0c\u6240\u4ee5\u8fd9\u4e2a\u65b9\u6cd5\u8fd8\u662f\u5f88\u6709\u610f\u4e49\u7684\u3002"]}),"\n",(0,t.jsx)(e.h3,{id:"\u89e3\u6cd5-1",children:"\u89e3\u6cd5 1"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:"// Missing Number\n// Time Complexity: O(n), Space Complexity: O(1)\npublic class Solution {\n    public int missingNumber(int[] nums) {\n        int sum = 0;\n        for (int x : nums) {\n            sum += x;\n        }\n        final int n = nums.length;\n        final int sumExpected = (n * (n + 1)) / 2;\n        return sumExpected - sum;\n    }\n}\n"})}),"\n",(0,t.jsx)(e.h3,{id:"\u89e3\u6cd5-2",children:"\u89e3\u6cd5 2"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:"// Missing Number\n// Time Complexity: O(n), Space Complexity: O(1)\npublic class Solution {\n    public int missingNumber(int[] nums) {\n        int result = 0;\n        for (int i = 0; i < nums.length; ++i) {\n            result ^= (i+1) ^ nums[i];\n        }\n        return result;\n    }\n}\n"})}),"\n",(0,t.jsx)(e.h3,{id:"\u89e3\u6cd5-3",children:"\u89e3\u6cd5 3"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:"// Missing Number\n// Time Complexity: O(nlogn), Space Complexity: O(1)\npublic class Solution {\n    public int missingNumber(int[] nums) {\n        Arrays.sort(nums);\n        int begin = 0;\n        int end = nums.length;\n        while (begin != end) {\n            final int mid = begin + (end - begin) / 2;\n            if (mid < nums[mid]) end = mid;\n            else begin = mid + 1;\n        }\n        return end;\n    }\n}\n"})})]})}function m(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}},28453:(n,e,i)=>{i.d(e,{R:()=>o,x:()=>l});var s=i(96540);const t={},r=s.createContext(t);function o(n){const e=s.useContext(r);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:o(n.components),s.createElement(r.Provider,{value:e},n.children)}}}]);