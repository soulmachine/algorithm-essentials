"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[3102],{90020:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>d,contentTitle:()=>u,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"dual-pointers/longest-palindromic-substring","title":"Longest Palindromic Substring","description":"\u63cf\u8ff0","source":"@site/docs/dual-pointers/longest-palindromic-substring.md","sourceDirName":"dual-pointers","slug":"/dual-pointers/longest-palindromic-substring","permalink":"/dual-pointers/longest-palindromic-substring","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Longest Palindromic Substring"},"sidebar":"docs","previous":{"title":"Valid Palindrome II","permalink":"/dual-pointers/valid-palindrome-ii"},"next":{"title":"Longest Consecutive Sequence","permalink":"/dual-pointers/longest-consecutive-sequence"}}');var i=t(74848),a=t(28453),l=t(11470),s=t(19365);const o={title:"Longest Palindromic Substring"},u=void 0,d={},c=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3},{value:"\u4e2d\u5fc3\u7ebf\u679a\u4e3e\u7b97\u6cd5",id:"\u4e2d\u5fc3\u7ebf\u679a\u4e3e\u7b97\u6cd5",level:4},{value:"Manacher\u2019s Algorithm",id:"manachers-algorithm",level:4}];function m(n){const e={code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,a.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h3,{id:"\u63cf\u8ff0",children:"\u63cf\u8ff0"}),"\n",(0,i.jsxs)(e.p,{children:["Given a string ",(0,i.jsx)(e.code,{children:"S"}),", find the longest palindromic substring in ",(0,i.jsx)(e.code,{children:"S"}),". You may assume that the maximum length of ",(0,i.jsx)(e.code,{children:"S"})," is 1000, and there exists one unique longest palindromic substring."]}),"\n",(0,i.jsx)(e.h3,{id:"\u5206\u6790",children:"\u5206\u6790"}),"\n",(0,i.jsx)(e.p,{children:"\u6700\u957f\u56de\u6587\u5b50\u4e32\uff0c\u975e\u5e38\u7ecf\u5178\u7684\u9898\u3002"}),"\n",(0,i.jsxs)(e.p,{children:["\u6700\u7b80\u5355\u7684\u601d\u8def\u662f\u66b4\u529b\u679a\u4e3e\uff0c\u4e24\u4e24\u7ec4\u5408\u679a\u4e3e\u6240\u6709\u7684\u5b50\u4e32\uff0c\u68c0\u67e5\u6bcf\u4e2a\u5b50\u4e32\u662f\u5426\u662f\u56de\u6587\u4e32\uff0c\u4ee5\u6bcf\u4e2a\u5143\u7d20\u4e3a\u4e2d\u95f4\u5143\u7d20\uff0c\u65f6\u95f4\u590d\u6742\u5ea6",(0,i.jsx)(e.code,{children:"O(n^3)"}),"\u3002"]}),"\n",(0,i.jsx)(e.p,{children:"\u53ef\u4ee5\u6362\u4e00\u79cd\u601d\u8def\u8fdb\u884c\u66b4\u529b\u679a\u4e3e\uff0c\u4ee5\u6bcf\u4e2a\u5b57\u7b26\u4e3a\u4e2d\u5fc3\uff0c\u53cc\u6307\u9488\u80cc\u5411\u800c\u884c\uff0c\u68c0\u6d4b\u5b50\u4e32\u662f\u5426\u662f\u56de\u6587\u4e32\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n^2)\u3002\u4e0d\u8fc7\u8981\u6ce8\u610f\uff0c\u56de\u6587\u5b50\u4e32\u6709\u4e24\u79cd\u60c5\u51b5\uff0c\u5947\u6570\u548c\u5076\u6570\uff0c\u679a\u4e3e\u7684\u65f6\u5019\u8981\u8986\u76d6\u8fd92\u79cd\u60c5\u51b5\u3002"}),"\n",(0,i.jsx)(e.h3,{id:"\u4ee3\u7801",children:"\u4ee3\u7801"}),"\n",(0,i.jsx)(e.h4,{id:"\u4e2d\u5fc3\u7ebf\u679a\u4e3e\u7b97\u6cd5",children:"\u4e2d\u5fc3\u7ebf\u679a\u4e3e\u7b97\u6cd5"}),"\n","\n",(0,i.jsxs)(l.A,{defaultValue:"python",values:[{label:"Python",value:"python"},{label:"Java",value:"java"},{label:"C++",value:"cpp"}],children:[(0,i.jsx)(s.A,{value:"java",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// Longest Palindromic Substring\n// \u4e2d\u5fc3\u7ebf\u679a\u4e3e\u7b97\u6cd5\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n^2)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(1)\nclass Solution {\n    public String longestPalindrome(String s) {\n        String longest = "";\n        for (int i = 0; i < s.length(); i ++) {\n            // \u56de\u6587\u5b50\u4e32\u7684\u957f\u5ea6\u662f\u5947\u6570\n            String oddPalindrome = getPalindrome(s, i, i);\n            if (longest.length() < oddPalindrome.length()) {\n                longest = oddPalindrome;\n            }\n\n            // \u56de\u6587\u5b50\u4e32\u7684\u957f\u5ea6\u662f\u5076\u6570\n            String evenPalindrome = getPalindrome(s, i, i + 1);\n            if (longest.length() < evenPalindrome.length()) {\n                longest = evenPalindrome;\n            }\n        }\n\n        return longest;\n    }\n\n    private String getPalindrome(String s, int left, int right) {\n        while(left >= 0 && right < s.length()) {\n            if (s.charAt(left) != s.charAt(right)) {\n                break;\n            }\n            left--;\n            right++;\n        }\n        return s.substring(left + 1, right);\n    }\n}\n'})})}),(0,i.jsx)(s.A,{value:"cpp",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-cpp",children:"// TODO\n"})})}),(0,i.jsx)(s.A,{value:"python",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'# Longest Palindromic Substring\n# Center enumeration algorithm\n# Time complexity O(n^2), Space complexity O(1)\nclass Solution:\n    def longestPalindrome(self, s: str) -> str:\n        longest = ""\n        for i in range(len(s)):\n            # palindrome substring with odd length\n            odd_palindrome = self.get_palindrome(s, i, i)\n            if len(longest) < len(odd_palindrome):\n                longest = odd_palindrome\n\n            # palindrome substring with even length\n            even_palindrome = self.get_palindrome(s, i, i + 1)\n            if len(longest) < len(even_palindrome):\n                longest = even_palindrome\n\n        return longest\n\n    def get_palindrome(self, s: str, left: int, right: int) -> str:\n        while left >= 0 and right < len(s):\n            if s[left] != s[right]:\n                break\n            left -= 1\n            right += 1\n        return s[left + 1:right]\n'})})})]}),"\n",(0,i.jsx)(e.h4,{id:"manachers-algorithm",children:"Manacher\u2019s Algorithm"}),"\n",(0,i.jsxs)(l.A,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],children:[(0,i.jsx)(s.A,{value:"java",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// Longest Palindromic Substring\n// Manacher\u2019s Algorithm\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\nclass Solution {\n    // Transform S into T.\n    // For example, S = "abba", T = "^#a#b#b#a#$".\n    // ^ and $ signs are sentinels appended to each end to avoid bounds checking\n    public String preProcess(final String s) {\n        int n = s.length();\n        if (n == 0) return "^$";\n\n        StringBuilder ret = new StringBuilder("^");\n        for (int i = 0; i < n; i++) ret.append("#" + s.charAt(i));\n\n        ret.append("#$");\n        return ret.toString();\n    }\n\n    String longestPalindrome(String s) {\n        String T = preProcess(s);\n        final int n = T.length();\n        // \u4ee5T[i]\u4e3a\u4e2d\u5fc3\uff0c\u5411\u5de6/\u53f3\u6269\u5f20\u7684\u957f\u5ea6\uff0c\u4e0d\u5305\u542bT[i]\u81ea\u5df1\uff0c\n        // \u56e0\u6b64 P[i]\u662f\u6e90\u5b57\u7b26\u4e32\u4e2d\u56de\u6587\u4e32\u7684\u957f\u5ea6\n        int[] P = new int[n];\n        int C = 0, R = 0;\n\n        for (int i = 1; i < n - 1; i++) {\n            int iMirror = 2 * C - i; // equals to i\' = C - (i-C)\n\n            P[i] = (R > i) ? Math.min(R - i, P[iMirror]) : 0;\n\n            // Attempt to expand palindrome centered at i\n            while (T.charAt(i + 1 + P[i]) == T.charAt(i - 1 - P[i]))\n                P[i]++;\n\n            // If palindrome centered at i expand past R,\n            // adjust center based on expanded palindrome.\n            if (i + P[i] > R) {\n                C = i;\n                R = i + P[i];\n            }\n        }\n\n        // Find the maximum element in P.\n        int maxLen = 0;\n        int centerIndex = 0;\n        for (int i = 1; i < n - 1; i++) {\n            if (P[i] > maxLen) {\n                maxLen = P[i];\n                centerIndex = i;\n            }\n        }\n\n        final int start =(centerIndex - 1 - maxLen) / 2;\n        return s.substring(start, start + maxLen);\n    }\n}\n'})})}),(0,i.jsx)(s.A,{value:"cpp",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-cpp",children:'// Longest Palindromic Substring\n// Manacher\u2019s Algorithm\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\nclass Solution {\npublic:\n    // Transform S into T.\n    // For example, S = "abba", T = "^#a#b#b#a#$".\n    // ^ and $ signs are sentinels appended to each end to avoid bounds checking\n    string preProcess(const string& s) {\n        int n = s.length();\n        if (n == 0) return "^$";\n\n        string ret = "^";\n        for (int i = 0; i < n; i++) ret += "#" + s.substr(i, 1);\n\n        ret += "#$";\n        return ret;\n    }\n\n    string longestPalindrome(string s) {\n        string T = preProcess(s);\n        const int n = T.length();\n        // \u4ee5T[i]\u4e3a\u4e2d\u5fc3\uff0c\u5411\u5de6/\u53f3\u6269\u5f20\u7684\u957f\u5ea6\uff0c\u4e0d\u5305\u542bT[i]\u81ea\u5df1\uff0c\n        // \u56e0\u6b64 P[i]\u662f\u6e90\u5b57\u7b26\u4e32\u4e2d\u56de\u6587\u4e32\u7684\u957f\u5ea6\n        int P[n];\n        int C = 0, R = 0;\n\n        for (int i = 1; i < n - 1; i++) {\n            int i_mirror = 2 * C - i; // equals to i\' = C - (i-C)\n\n            P[i] = (R > i) ? min(R - i, P[i_mirror]) : 0;\n\n            // Attempt to expand palindrome centered at i\n            while (T[i + 1 + P[i]] == T[i - 1 - P[i]])\n                P[i]++;\n\n            // If palindrome centered at i expand past R,\n            // adjust center based on expanded palindrome.\n            if (i + P[i] > R) {\n                C = i;\n                R = i + P[i];\n            }\n        }\n\n        // Find the maximum element in P.\n        int max_len = 0;\n        int center_index = 0;\n        for (int i = 1; i < n - 1; i++) {\n            if (P[i] > max_len) {\n                max_len = P[i];\n                center_index = i;\n            }\n        }\n\n        return s.substr((center_index - 1 - max_len) / 2, max_len);\n    }\n};\n'})})}),(0,i.jsx)(s.A,{value:"python",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'# Longest Palindromic Substring\n# Manacher\'s Algorithm\n# \u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\nclass Solution:\n    # Transform S into T.\n    # For example, S = "abba", T = "^#a#b#b#a#$".\n    # ^ and $ signs are sentinels appended to each end to avoid bounds checking\n    def preProcess(self, s: str) -> str:\n        n = len(s)\n        if n == 0:\n            return "^$"\n\n        ret = ["^"]\n        for i in range(n):\n            ret.append("#" + s[i])\n\n        ret.append("#$")\n        return "".join(ret)\n\n    def longestPalindrome(self, s: str) -> str:\n        T = self.preProcess(s)\n        n = len(T)\n        # \u4ee5T[i]\u4e3a\u4e2d\u5fc3\uff0c\u5411\u5de6/\u53f3\u6269\u5f20\u7684\u957f\u5ea6\uff0c\u4e0d\u5305\u542bT[i]\u81ea\u5df1\uff0c\n        # \u56e0\u6b64 P[i]\u662f\u6e90\u5b57\u7b26\u4e32\u4e2d\u56de\u6587\u4e32\u7684\u957f\u5ea6\n        P = [0] * n\n        C = 0\n        R = 0\n\n        for i in range(1, n - 1):\n            iMirror = 2 * C - i  # equals to i\' = C - (i-C)\n\n            P[i] = min(R - i, P[iMirror]) if R > i else 0\n\n            # Attempt to expand palindrome centered at i\n            while T[i + 1 + P[i]] == T[i - 1 - P[i]]:\n                P[i] += 1\n\n            # If palindrome centered at i expand past R,\n            # adjust center based on expanded palindrome.\n            if i + P[i] > R:\n                C = i\n                R = i + P[i]\n\n        # Find the maximum element in P.\n        maxLen = 0\n        centerIndex = 0\n        for i in range(1, n - 1):\n            if P[i] > maxLen:\n                maxLen = P[i]\n                centerIndex = i\n\n        start = (centerIndex - 1 - maxLen) // 2\n        return s[start:start + maxLen]\n'})})})]})]})}function p(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(m,{...n})}):m(n)}},19365:(n,e,t)=>{t.d(e,{A:()=>l});t(96540);var r=t(34164);const i={tabItem:"tabItem_Ymn6"};var a=t(74848);function l(n){let{children:e,hidden:t,className:l}=n;return(0,a.jsx)("div",{role:"tabpanel",className:(0,r.A)(i.tabItem,l),hidden:t,children:e})}},11470:(n,e,t)=>{t.d(e,{A:()=>S});var r=t(96540),i=t(34164),a=t(23104),l=t(56347),s=t(205),o=t(57485),u=t(31682),d=t(70679);function c(n){return r.Children.toArray(n).filter((n=>"\n"!==n)).map((n=>{if(!n||(0,r.isValidElement)(n)&&function(n){const{props:e}=n;return!!e&&"object"==typeof e&&"value"in e}(n))return n;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof n.type?n.type:n.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(n){const{values:e,children:t}=n;return(0,r.useMemo)((()=>{const n=e??function(n){return c(n).map((n=>{let{props:{value:e,label:t,attributes:r,default:i}}=n;return{value:e,label:t,attributes:r,default:i}}))}(t);return function(n){const e=(0,u.XI)(n,((n,e)=>n.value===e.value));if(e.length>0)throw new Error(`Docusaurus error: Duplicate values "${e.map((n=>n.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(n),n}),[e,t])}function p(n){let{value:e,tabValues:t}=n;return t.some((n=>n.value===e))}function h(n){let{queryString:e=!1,groupId:t}=n;const i=(0,l.W6)(),a=function(n){let{queryString:e=!1,groupId:t}=n;if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,o.aZ)(a),(0,r.useCallback)((n=>{if(!a)return;const e=new URLSearchParams(i.location.search);e.set(a,n),i.replace({...i.location,search:e.toString()})}),[a,i])]}function g(n){const{defaultValue:e,queryString:t=!1,groupId:i}=n,a=m(n),[l,o]=(0,r.useState)((()=>function(n){let{defaultValue:e,tabValues:t}=n;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map((n=>n.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const r=t.find((n=>n.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:e,tabValues:a}))),[u,c]=h({queryString:t,groupId:i}),[g,f]=function(n){let{groupId:e}=n;const t=function(n){return n?`docusaurus.tab.${n}`:null}(e),[i,a]=(0,d.Dv)(t);return[i,(0,r.useCallback)((n=>{t&&a.set(n)}),[t,a])]}({groupId:i}),b=(()=>{const n=u??g;return p({value:n,tabValues:a})?n:null})();(0,s.A)((()=>{b&&o(b)}),[b]);return{selectedValue:l,selectValue:(0,r.useCallback)((n=>{if(!p({value:n,tabValues:a}))throw new Error(`Can't select invalid tab value=${n}`);o(n),c(n),f(n)}),[c,f,a]),tabValues:a}}var f=t(92303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=t(74848);function v(n){let{className:e,block:t,selectedValue:r,selectValue:l,tabValues:s}=n;const o=[],{blockElementScrollPositionUntilNextRender:u}=(0,a.a_)(),d=n=>{const e=n.currentTarget,t=o.indexOf(e),i=s[t].value;i!==r&&(u(e),l(i))},c=n=>{let e=null;switch(n.key){case"Enter":d(n);break;case"ArrowRight":{const t=o.indexOf(n.currentTarget)+1;e=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(n.currentTarget)-1;e=o[t]??o[o.length-1];break}}e?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":t},e),children:s.map((n=>{let{value:e,label:t,attributes:a}=n;return(0,x.jsx)("li",{role:"tab",tabIndex:r===e?0:-1,"aria-selected":r===e,ref:n=>o.push(n),onKeyDown:c,onClick:d,...a,className:(0,i.A)("tabs__item",b.tabItem,a?.className,{"tabs__item--active":r===e}),children:t??e},e)}))})}function P(n){let{lazy:e,children:t,selectedValue:a}=n;const l=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const n=l.find((n=>n.props.value===a));return n?(0,r.cloneElement)(n,{className:(0,i.A)("margin-top--md",n.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:l.map(((n,e)=>(0,r.cloneElement)(n,{key:e,hidden:n.props.value!==a})))})}function j(n){const e=g(n);return(0,x.jsxs)("div",{className:(0,i.A)("tabs-container",b.tabList),children:[(0,x.jsx)(v,{...e,...n}),(0,x.jsx)(P,{...e,...n})]})}function S(n){const e=(0,f.A)();return(0,x.jsx)(j,{...n,children:c(n.children)},String(e))}},28453:(n,e,t)=>{t.d(e,{R:()=>l,x:()=>s});var r=t(96540);const i={},a=r.createContext(i);function l(n){const e=r.useContext(a);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:l(n.components),r.createElement(a.Provider,{value:e},n.children)}}}]);