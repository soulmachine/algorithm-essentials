"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[1724],{80760:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>u,metadata:()=>i,toc:()=>m});const i=JSON.parse('{"id":"simulation/multiply-strings","title":"Multiply Strings","description":"\u63cf\u8ff0","source":"@site/docs/simulation/multiply-strings.md","sourceDirName":"simulation","slug":"/simulation/multiply-strings","permalink":"/simulation/multiply-strings","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Multiply Strings"},"sidebar":"docs","previous":{"title":"Add Strings","permalink":"/simulation/add-strings"},"next":{"title":"Substring with Concatenation of All Words","permalink":"/simulation/substring-with-concatenation-of-all-words"}}');var s=e(74848),r=e(28453),l=e(11470),a=e(19365);const u={title:"Multiply Strings"},o=void 0,c={},m=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3},{value:"\u6a21\u62df\u4e58\u6cd5",id:"\u6a21\u62df\u4e58\u6cd5",level:4},{value:"\u8f6c\u5316\u6210\u6574\u6570\u6570\u7ec4\uff0c\u4e00\u4e2a\u5b57\u7b26\u5bf9\u5e94\u4e00\u4e2a\u6574\u6570",id:"\u8f6c\u5316\u6210\u6574\u6570\u6570\u7ec4\u4e00\u4e2a\u5b57\u7b26\u5bf9\u5e94\u4e00\u4e2a\u6574\u6570",level:4},{value:"\u8f6c\u5316\u6210\u6574\u6570\u6570\u7ec4\uff0c9 \u4e2a\u5b57\u7b26\u5bf9\u5e94\u4e00\u4e2a 64 \u4f4d\u6574\u6570",id:"\u8f6c\u5316\u6210\u6574\u6570\u6570\u7ec49-\u4e2a\u5b57\u7b26\u5bf9\u5e94\u4e00\u4e2a-64-\u4f4d\u6574\u6570",level:4},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",level:3}];function g(n){const t={a:"a",annotation:"annotation",code:"code",h3:"h3",h4:"h4",li:"li",math:"math",mn:"mn",mo:"mo",mrow:"mrow",msup:"msup",p:"p",pre:"pre",semantics:"semantics",span:"span",ul:"ul",...(0,r.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h3,{id:"\u63cf\u8ff0",children:"\u63cf\u8ff0"}),"\n",(0,s.jsx)(t.p,{children:"Given two numbers represented as strings, return multiplication of the numbers as a string."}),"\n",(0,s.jsx)(t.p,{children:"Note: The numbers can be arbitrarily large and are non-negative."}),"\n",(0,s.jsx)(t.h3,{id:"\u5206\u6790",children:"\u5206\u6790"}),"\n",(0,s.jsx)(t.p,{children:"\u9ad8\u7cbe\u5ea6\u4e58\u6cd5\u3002"}),"\n",(0,s.jsx)(t.h3,{id:"\u4ee3\u7801",children:"\u4ee3\u7801"}),"\n","\n",(0,s.jsx)(t.h4,{id:"\u6a21\u62df\u4e58\u6cd5",children:"\u6a21\u62df\u4e58\u6cd5"}),"\n",(0,s.jsxs)(l.A,{defaultValue:"python",values:[{label:"Python",value:"python"},{label:"Java",value:"java"},{label:"C++",value:"cpp"}],children:[(0,s.jsx)(a.A,{value:"java",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:"// Multiply Strings\n// Time Complexity: O(n*m), Space Complexity: O(n+m)\nclass Solution {\n    public String multiply(String num1, String num2) {\n        int m = num1.length(), n = num2.length();\n        int[] z = new int[m + n];\n\n        for(int i = m - 1; i >= 0; i--) {\n            for(int j = n - 1; j >= 0; j--) {\n                int mul = (num1.charAt(i) - '0') * (num2.charAt(j) - '0');\n                int sum = mul + z[i+j+1];\n                z[i + j + 1] = sum % 10;\n                z[i + j] += sum / 10; // carry\n            }\n        }\n\n        StringBuilder sb = new StringBuilder();\n        for(int x : z) {\n            if(!(sb.length() == 0 && x == 0)) // skip prefix zeros\n                sb.append(x);\n        }\n        return sb.length() == 0 ? \"0\" : sb.toString();\n    }\n}\n"})})}),(0,s.jsx)(a.A,{value:"cpp",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:"// TODO\n"})})}),(0,s.jsx)(a.A,{value:"python",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"# Multiply Strings\n# Time Complexity: O(n*m), Space Complexity: O(n+m)\nclass Solution:\n    def multiply(self, num1: str, num2: str) -> str:\n        m, n = len(num1), len(num2)\n        z = [0] * (m + n)\n\n        for i in range(m-1, -1, -1):\n            for j in range(n-1, -1, -1):\n                mul = (ord(num1[i]) - ord('0')) * (ord(num2[j]) - ord('0'))\n                curr_sum = mul + z[i+j+1]\n                z[i+j+1] = curr_sum % 10\n                z[i+j] += curr_sum // 10  # carry\n\n        result = []\n        for x in z:\n            if not (len(result) == 0 and x == 0):  # skip prefix zeros\n                result.append(str(x))\n        return ''.join(result) if result else \"0\"\n"})})})]}),"\n",(0,s.jsx)(t.h4,{id:"\u8f6c\u5316\u6210\u6574\u6570\u6570\u7ec4\u4e00\u4e2a\u5b57\u7b26\u5bf9\u5e94\u4e00\u4e2a\u6574\u6570",children:"\u8f6c\u5316\u6210\u6574\u6570\u6570\u7ec4\uff0c\u4e00\u4e2a\u5b57\u7b26\u5bf9\u5e94\u4e00\u4e2a\u6574\u6570"}),"\n",(0,s.jsx)(t.p,{children:"\u5e38\u89c1\u7684\u505a\u6cd5\u662f\u628a\u6bcf\u4e2a\u5b57\u7b26\u8f6c\u5316\u4e3a\u4e00\u4e2a int\uff0c\u4e00\u4e00\u5bf9\u5e94\uff0c\u5f62\u6210\u4e00\u4e2a int \u6570\u7ec4\u3002"}),"\n",(0,s.jsxs)(l.A,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],children:[(0,s.jsx)(a.A,{value:"java",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:"// Multiply Strings\n// \u4e00\u4e2a\u5b57\u7b26\u5bf9\u5e94\u4e00\u4e2aint\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n*m)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n+m)\npublic class Solution {\n    public String multiply(String num1, String num2) {\n        BigInt bigInt1 = new BigInt(num1);\n        BigInt bigInt2 = new BigInt(num2);\n        BigInt result = BigInt.multiply(bigInt1, bigInt2);\n        return result.toString();\n    }\n\n    // \u4e00\u4e2a\u5b57\u7b26\u5bf9\u5e94\u4e00\u4e2aint\n    static class BigInt {\n        private final int[] d;\n\n        public BigInt(String s) {\n            this.d = fromString(s);\n        }\n        public BigInt(int[] d) {\n            this.d = d;\n        }\n\n        private static int[] fromString(String s) {\n            int[] d = new int[s.length()];\n            for (int i = s.length() - 1, j = 0; i >= 0; --i)\n                d[j++] = Character.getNumericValue(s.charAt(i));\n            return d;\n        }\n\n        @Override\n        public String toString() {\n            final StringBuilder sb = new StringBuilder();\n            for (int i = d.length - 1; i >= 0; --i) {\n                sb.append(Character.forDigit(d[i], 10));\n            }\n            return sb.toString();\n        }\n\n        public static BigInt multiply(BigInt x, BigInt y) {\n            int[] z = new int[x.d.length + y.d.length];\n            for (int i = 0; i < x.d.length; ++i) {\n                for (int j = 0; j < y.d.length; ++j) {\n                    z[i + j] += x.d[i] * y.d[j];\n                    z[i + j + 1] += z[i + j] / 10;\n                    z[i + j] %= 10;\n                }\n            }\n            // find the first 0 from right to left\n            int i = z.length - 1;\n            for (; i > 0 && z[i] == 0; --i) /* empty */;\n\n            if (i == z.length - 1) {\n                return new BigInt(z);\n            } else { // make a copy\n                int[] tmp = new int[i + 1];\n                System.arraycopy(z, 0, tmp, 0, i + 1);\n                return new BigInt(tmp);\n            }\n        }\n    }\n}\n"})})}),(0,s.jsx)(a.A,{value:"cpp",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:"// Multiply Strings\n// @author \u8fde\u57ce (http://weibo.com/lianchengzju)\n// \u4e00\u4e2a\u5b57\u7b26\u5bf9\u5e94\u4e00\u4e2aint\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n*m)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n+m)\ntypedef vector<int> bigint;\n\nbigint make_bigint(string const& repr) {\n    bigint n;\n    transform(repr.rbegin(), repr.rend(), back_inserter(n),\n            [](char c) { return c - '0'; });\n    return n;\n}\n\nstring to_string(bigint const& n) {\n    string str;\n    transform(find_if(n.rbegin(), prev(n.rend()),\n            [](char c) { return c > '\\0'; }), n.rend(), back_inserter(str),\n            [](char c) { return c + '0'; });\n    return str;\n}\n\nbigint operator*(bigint const& x, bigint const& y) {\n    bigint z(x.size() + y.size());\n\n    for (size_t i = 0; i < x.size(); ++i)\n        for (size_t j = 0; j < y.size(); ++j) {\n            z[i + j] += x[i] * y[j];\n            z[i + j + 1] += z[i + j] / 10;\n            z[i + j] %= 10;\n        }\n\n    return z;\n}\n\nclass Solution {\npublic:\n    string multiply(string num1, string num2) {\n        return to_string(make_bigint(num1) * make_bigint(num2));\n    }\n};\n"})})}),(0,s.jsx)(a.A,{value:"python",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"# Multiply Strings\n# \u4e00\u4e2a\u5b57\u7b26\u5bf9\u5e94\u4e00\u4e2aint\n# \u65f6\u95f4\u590d\u6742\u5ea6O(n*m)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n+m)\nclass Solution:\n    def multiply(self, num1: str, num2: str) -> str:\n        bigInt1 = BigInt(num1)\n        bigInt2 = BigInt(num2)\n        result = BigInt.multiply(bigInt1, bigInt2)\n        return str(result)\n\n    # \u4e00\u4e2a\u5b57\u7b26\u5bf9\u5e94\u4e00\u4e2aint\nclass BigInt:\n    def __init__(self, s):\n        if isinstance(s, str):\n            self.d = self.fromString(s)\n        else:\n            self.d = s\n\n    @staticmethod\n    def fromString(s):\n        d = [0] * len(s)\n        j = 0\n        for i in range(len(s) - 1, -1, -1):\n            d[j] = int(s[i])\n            j += 1\n        return d\n\n    def __str__(self):\n        return ''.join(str(self.d[i]) for i in range(len(self.d) - 1, -1, -1))\n\n    @staticmethod\n    def multiply(x, y):\n        z = [0] * (len(x.d) + len(y.d))\n        for i in range(len(x.d)):\n            for j in range(len(y.d)):\n                z[i + j] += x.d[i] * y.d[j]\n                z[i + j + 1] += z[i + j] // 10\n                z[i + j] %= 10\n\n        # find the first 0 from right to left\n        i = len(z) - 1\n        while i > 0 and z[i] == 0:\n            i -= 1\n\n        if i == len(z) - 1:\n            return BigInt(z)\n        else:  # make a copy\n            return BigInt(z[:i + 1])\n"})})})]}),"\n",(0,s.jsx)(t.h4,{id:"\u8f6c\u5316\u6210\u6574\u6570\u6570\u7ec49-\u4e2a\u5b57\u7b26\u5bf9\u5e94\u4e00\u4e2a-64-\u4f4d\u6574\u6570",children:"\u8f6c\u5316\u6210\u6574\u6570\u6570\u7ec4\uff0c9 \u4e2a\u5b57\u7b26\u5bf9\u5e94\u4e00\u4e2a 64 \u4f4d\u6574\u6570"}),"\n",(0,s.jsxs)(t.p,{children:["\u4e00\u4e2a\u5b57\u7b26\u7528\u4e00\u4e2a int \u8868\u793a\uff0c\u5176\u5b9e\u662f\u6bd4\u8f83\u6d6a\u8d39\u5185\u5b58\u7a7a\u95f4\u7684\uff0c\u56e0\u4e3a\u4e00\u4e2a int64 \u7684\u6700\u5927\u503c\u662f",(0,s.jsxs)(t.span,{className:"katex",children:[(0,s.jsx)(t.span,{className:"katex-mathml",children:(0,s.jsx)(t.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,s.jsxs)(t.semantics,{children:[(0,s.jsxs)(t.mrow,{children:[(0,s.jsxs)(t.msup,{children:[(0,s.jsx)(t.mn,{children:"2"}),(0,s.jsx)(t.mn,{children:"63"})]}),(0,s.jsx)(t.mo,{children:"\u2212"}),(0,s.jsx)(t.mn,{children:"1"}),(0,s.jsx)(t.mo,{children:"="}),(0,s.jsx)(t.mn,{children:"9223372036854775807"})]}),(0,s.jsx)(t.annotation,{encoding:"application/x-tex",children:"2^{63}-1=9223372036854775807"})]})})}),(0,s.jsxs)(t.span,{className:"katex-html","aria-hidden":"true",children:[(0,s.jsxs)(t.span,{className:"base",children:[(0,s.jsx)(t.span,{className:"strut",style:{height:"0.8974em",verticalAlign:"-0.0833em"}}),(0,s.jsxs)(t.span,{className:"mord",children:[(0,s.jsx)(t.span,{className:"mord",children:"2"}),(0,s.jsx)(t.span,{className:"msupsub",children:(0,s.jsx)(t.span,{className:"vlist-t",children:(0,s.jsx)(t.span,{className:"vlist-r",children:(0,s.jsx)(t.span,{className:"vlist",style:{height:"0.8141em"},children:(0,s.jsxs)(t.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,s.jsx)(t.span,{className:"pstrut",style:{height:"2.7em"}}),(0,s.jsx)(t.span,{className:"sizing reset-size6 size3 mtight",children:(0,s.jsx)(t.span,{className:"mord mtight",children:(0,s.jsx)(t.span,{className:"mord mtight",children:"63"})})})]})})})})})]}),(0,s.jsx)(t.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.jsx)(t.span,{className:"mbin",children:"\u2212"}),(0,s.jsx)(t.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,s.jsxs)(t.span,{className:"base",children:[(0,s.jsx)(t.span,{className:"strut",style:{height:"0.6444em"}}),(0,s.jsx)(t.span,{className:"mord",children:"1"}),(0,s.jsx)(t.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.jsx)(t.span,{className:"mrel",children:"="}),(0,s.jsx)(t.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,s.jsxs)(t.span,{className:"base",children:[(0,s.jsx)(t.span,{className:"strut",style:{height:"0.6444em"}}),(0,s.jsx)(t.span,{className:"mord",children:"9223372036854775807"})]})]})]}),"\uff0c\u53ef\u4ee5\u4e0e 19 \u4e2a\u5b57\u7b26\u5bf9\u5e94\uff0c\u7531\u4e8e\u6709\u4e58\u6cd5\uff0c\u51cf\u534a\uff0c\u5219\u81f3\u5c11\u53ef\u4ee5\u4e0e 9 \u4e2a\u5b57\u7b26\u4e00\u4e00\u5bf9\u5e94\u3002"]}),"\n",(0,s.jsxs)(l.A,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],children:[(0,s.jsx)(a.A,{value:"java",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'// Multiply Strings\n// 9\u4e2a\u5b57\u7b26\u5bf9\u5e94\u4e00\u4e2a long\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n*m)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n+m)\npublic class Solution {\n    public String multiply(String num1, String num2) {\n        BigInt bigInt1 = BigInt.fromString(num1);\n        BigInt bigInt2 = BigInt.fromString(num2);\n        BigInt result = BigInt.multiply(bigInt1, bigInt2);\n        return result.toString();\n    }\n\n    // 9\u4e2a\u5b57\u7b26\u5bf9\u5e94\u4e00\u4e2a long\n    static class BigInt {\n        /** \u4e00\u4e2a\u6570\u7ec4\u5143\u7d20\u5bf9\u5e949\u4e2a\u5341\u8fdb\u5236\u4f4d\uff0c\u5373\u6570\u7ec4\u662f\u4ebf\u8fdb\u5236\u7684\n         * \u56e0\u4e3a 1000000000 * 1000000000 \u6ca1\u6709\u8d85\u8fc7 2^63-1\n         */\n        final static int BIGINT_RADIX = 1000000000;\n        final static int RADIX_LEN = 9;\n        /** \u4e07\u8fdb\u5236\u6574\u6570. */\n        private final long[] digits;\n\n        public BigInt(long[] digits) {\n            this.digits = digits;\n        }\n\n        private static BigInt fromString(String s) {\n            long[] digits;\n            if (s.length() % RADIX_LEN == 0) {\n                digits = new long[s.length() / RADIX_LEN];\n            } else {\n                digits = new long[s.length() / RADIX_LEN + 1];\n            }\n            for (int i = s.length(), k = 0; i > 0; i -= RADIX_LEN) {\n                long tmp = 0;\n                for (int j = Math.max(0, i - RADIX_LEN); j < i; ++j) {\n                    tmp = tmp * 10 + Character.getNumericValue(s.charAt(j));\n                }\n                digits[k++] = tmp;\n            }\n            return new BigInt(digits);\n        }\n\n        @Override\n        public String toString() {\n            final StringBuilder sb = new StringBuilder(\n                    Long.toString(digits[digits.length-1]));\n\n            for (int i = digits.length - 2; i >= 0; --i) {\n                sb.append(String.format("%0" + RADIX_LEN + "d", digits[i]));\n            }\n            return sb.toString();\n        }\n\n        public static BigInt multiply(BigInt x, BigInt y) {\n            long[] z = new long[x.digits.length + y.digits.length];\n            for (int i = 0; i < x.digits.length; ++i) {\n                for (int j = 0; j < y.digits.length; ++j) {\n                    z[i + j] += x.digits[i] * y.digits[j];\n                    z[i + j + 1] += z[i + j] / BIGINT_RADIX;\n                    z[i + j] %= BIGINT_RADIX;\n                }\n            }\n            // find the first 0 from right to left\n            int i = z.length - 1;\n            for (; i > 0 && z[i] == 0; --i) /* empty */;\n\n            if (i == z.length - 1) {\n                return new BigInt(z);\n            } else { // make a copy\n                long[] tmp = new long[i + 1];\n                System.arraycopy(z, 0, tmp, 0, i + 1);\n                return new BigInt(tmp);\n            }\n        }\n    }\n}\n'})})}),(0,s.jsx)(a.A,{value:"cpp",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:"// Multiply Strings\n// 9\u4e2a\u5b57\u7b26\u5bf9\u5e94\u4e00\u4e2aint64_t\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n*m/81)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O((n+m)/9)\n/** \u5927\u6574\u6570\u7c7b. */\nclass BigInt {\npublic:\n    /**\n     * @brief \u6784\u9020\u51fd\u6570\uff0c\u5c06\u5b57\u7b26\u4e32\u8f6c\u5316\u4e3a\u5927\u6574\u6570.\n     * @param[in] s \u8f93\u5165\u7684\u5b57\u7b26\u4e32\n     * @return \u65e0\n     */\n    BigInt(string s) {\n        vector<int64_t> result;\n        result.reserve(s.size() / RADIX_LEN + 1);\n\n        for (int i = s.size(); i > 0; i -= RADIX_LEN) {  // [i-RADIX_LEN, i)\n            int temp = 0;\n            const int low = max(i - RADIX_LEN, 0);\n            for (int j = low; j < i; j++) {\n                temp = temp * 10 + s[j] - '0';\n            }\n            result.push_back(temp);\n        }\n        elems = result;\n    }\n    /**\n     * @brief \u5c06\u6574\u6570\u8f6c\u5316\u4e3a\u5b57\u7b26\u4e32.\n     * @return \u5b57\u7b26\u4e32\n     */\n    string toString() {\n        stringstream result;\n        bool started = false; // \u7528\u4e8e\u8df3\u8fc7\u524d\u5bfc0\n        for (auto i = elems.rbegin(); i != elems.rend(); i++) {\n            if (started) { // \u5982\u679c\u591a\u4f59\u76840\u5df2\u7ecf\u90fd\u8df3\u8fc7\uff0c\u5219\u8f93\u51fa\n                result << setw(RADIX_LEN) << setfill('0') << *i;\n            } else {\n                result << *i;\n                started = true; // \u78b0\u5230\u7b2c\u4e00\u4e2a\u975e0\u7684\u503c\uff0c\u5c31\u8bf4\u660e\u591a\u4f59\u76840\u5df2\u7ecf\u90fd\u8df3\u8fc7\n            }\n        }\n\n        if (!started) return \"0\"; // \u5f53x\u5168\u4e3a0\u65f6\n        else return result.str();\n    }\n\n    /**\n     * @brief \u5927\u6574\u6570\u4e58\u6cd5.\n     * @param[in] x x\n     * @param[in] y y\n     * @return \u5927\u6574\u6570\n     */\n    static BigInt multiply(const BigInt &x, const BigInt &y) {\n        vector<int64_t> z(x.elems.size() + y.elems.size(), 0);\n\n        for (size_t i = 0; i < y.elems.size(); i++) {\n            for (size_t j = 0; j < x.elems.size(); j++) { // \u7528y[i]\u53bb\u4e58\u4ee5x\u7684\u5404\u4f4d\n                //  \u4e24\u6570\u7b2ci, j\u4f4d\u76f8\u4e58\uff0c\u7d2f\u52a0\u5230\u7ed3\u679c\u7684\u7b2ci+j\u4f4d\n                z[i + j] += y.elems[i] * x.elems[j];\n\n                if (z[i + j] >= BIGINT_RADIX) { //  \u770b\u662f\u5426\u8981\u8fdb\u4f4d\n                    z[i + j + 1] += z[i + j] / BIGINT_RADIX; //  \u8fdb\u4f4d\n                    z[i + j] %= BIGINT_RADIX;\n                }\n            }\n        }\n        while (z.back() == 0) z.pop_back();  // \u6ca1\u6709\u8fdb\u4f4d\uff0c\u53bb\u6389\u6700\u9ad8\u4f4d\u76840\n        return BigInt(z);\n    }\n\nprivate:\n    typedef long long int64_t;\n    /** \u4e00\u4e2a\u6570\u7ec4\u5143\u7d20\u5bf9\u5e949\u4e2a\u5341\u8fdb\u5236\u4f4d\uff0c\u5373\u6570\u7ec4\u662f\u4ebf\u8fdb\u5236\u7684\n     * \u56e0\u4e3a 1000000000 * 1000000000 \u6ca1\u6709\u8d85\u8fc7 2^63-1\n     */\n    const static int BIGINT_RADIX = 1000000000;\n    const static int RADIX_LEN = 9;\n    /** \u4e07\u8fdb\u5236\u6574\u6570. */\n    vector<int64_t> elems;\n    BigInt(const vector<int64_t> num) : elems(num) {}\n};\n\n\nclass Solution {\npublic:\n    string multiply(string num1, string num2) {\n        BigInt x(num1);\n        BigInt y(num2);\n        return BigInt::multiply(x, y).toString();\n    }\n};\n"})})}),(0,s.jsx)(a.A,{value:"python",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'# Multiply Strings\n# 9\u4e2a\u5b57\u7b26\u5bf9\u5e94\u4e00\u4e2a long\n# \u65f6\u95f4\u590d\u6742\u5ea6O(n*m)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n+m)\nclass Solution:\n    def multiply(self, num1: str, num2: str) -> str:\n        bigint1 = BigInt.from_string(num1)\n        bigint2 = BigInt.from_string(num2)\n        result = BigInt.multiply(bigint1, bigint2)\n        return str(result)\n\n# 9\u4e2a\u5b57\u7b26\u5bf9\u5e94\u4e00\u4e2a long\nclass BigInt:\n    """ \u4e00\u4e2a\u6570\u7ec4\u5143\u7d20\u5bf9\u5e949\u4e2a\u5341\u8fdb\u5236\u4f4d\uff0c\u5373\u6570\u7ec4\u662f\u4ebf\u8fdb\u5236\u7684\n    \u56e0\u4e3a 1000000000 * 1000000000 \u6ca1\u6709\u8d85\u8fc7 2^63-1\n    """\n    BIGINT_RADIX = 1000000000\n    RADIX_LEN = 9\n\n    def __init__(self, digits):\n        """ \u4e07\u8fdb\u5236\u6574\u6570. """\n        self.digits = digits\n\n    @staticmethod\n    def from_string(s):\n        digits = []\n        length = len(s)\n        for i in range(length, 0, -BigInt.RADIX_LEN):\n            tmp = 0\n            start = max(0, i - BigInt.RADIX_LEN)\n            for j in range(start, i):\n                tmp = tmp * 10 + int(s[j])\n            digits.append(tmp)\n        return BigInt(digits)\n\n    def __str__(self):\n        sb = [str(self.digits[-1])]\n        for i in range(len(self.digits) - 2, -1, -1):\n            sb.append(f"{self.digits[i]:0{BigInt.RADIX_LEN}d}")\n        return "".join(sb)\n\n    @staticmethod\n    def multiply(x, y):\n        z = [0] * (len(x.digits) + len(y.digits))\n        for i in range(len(x.digits)):\n            for j in range(len(y.digits)):\n                z[i + j] += x.digits[i] * y.digits[j]\n                z[i + j + 1] += z[i + j] // BigInt.BIGINT_RADIX\n                z[i + j] %= BigInt.BIGINT_RADIX\n\n        # find the first 0 from right to left\n        i = len(z) - 1\n        while i > 0 and z[i] == 0:\n            i -= 1\n\n        if i == len(z) - 1:\n            return BigInt(z)\n        else:  # make a copy\n            return BigInt(z[:i + 1])\n'})})})]}),"\n",(0,s.jsx)(t.h3,{id:"\u76f8\u5173\u9898\u76ee",children:"\u76f8\u5173\u9898\u76ee"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"/simulation/add-strings",children:"Add Strings"})}),"\n"]})]})}function d(n={}){const{wrapper:t}={...(0,r.R)(),...n.components};return t?(0,s.jsx)(t,{...n,children:(0,s.jsx)(g,{...n})}):g(n)}},19365:(n,t,e)=>{e.d(t,{A:()=>l});e(96540);var i=e(34164);const s={tabItem:"tabItem_Ymn6"};var r=e(74848);function l(n){let{children:t,hidden:e,className:l}=n;return(0,r.jsx)("div",{role:"tabpanel",className:(0,i.A)(s.tabItem,l),hidden:e,children:t})}},11470:(n,t,e)=>{e.d(t,{A:()=>v});var i=e(96540),s=e(34164),r=e(23104),l=e(56347),a=e(205),u=e(57485),o=e(31682),c=e(70679);function m(n){return i.Children.toArray(n).filter((n=>"\n"!==n)).map((n=>{if(!n||(0,i.isValidElement)(n)&&function(n){const{props:t}=n;return!!t&&"object"==typeof t&&"value"in t}(n))return n;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof n.type?n.type:n.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function g(n){const{values:t,children:e}=n;return(0,i.useMemo)((()=>{const n=t??function(n){return m(n).map((n=>{let{props:{value:t,label:e,attributes:i,default:s}}=n;return{value:t,label:e,attributes:i,default:s}}))}(e);return function(n){const t=(0,o.XI)(n,((n,t)=>n.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((n=>n.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(n),n}),[t,e])}function d(n){let{value:t,tabValues:e}=n;return e.some((n=>n.value===t))}function p(n){let{queryString:t=!1,groupId:e}=n;const s=(0,l.W6)(),r=function(n){let{queryString:t=!1,groupId:e}=n;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!e)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return e??null}({queryString:t,groupId:e});return[(0,u.aZ)(r),(0,i.useCallback)((n=>{if(!r)return;const t=new URLSearchParams(s.location.search);t.set(r,n),s.replace({...s.location,search:t.toString()})}),[r,s])]}function h(n){const{defaultValue:t,queryString:e=!1,groupId:s}=n,r=g(n),[l,u]=(0,i.useState)((()=>function(n){let{defaultValue:t,tabValues:e}=n;if(0===e.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:e}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${e.map((n=>n.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const i=e.find((n=>n.default))??e[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:t,tabValues:r}))),[o,m]=p({queryString:e,groupId:s}),[h,f]=function(n){let{groupId:t}=n;const e=function(n){return n?`docusaurus.tab.${n}`:null}(t),[s,r]=(0,c.Dv)(e);return[s,(0,i.useCallback)((n=>{e&&r.set(n)}),[e,r])]}({groupId:s}),j=(()=>{const n=o??h;return d({value:n,tabValues:r})?n:null})();(0,a.A)((()=>{j&&u(j)}),[j]);return{selectedValue:l,selectValue:(0,i.useCallback)((n=>{if(!d({value:n,tabValues:r}))throw new Error(`Can't select invalid tab value=${n}`);u(n),m(n),f(n)}),[m,f,r]),tabValues:r}}var f=e(92303);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=e(74848);function b(n){let{className:t,block:e,selectedValue:i,selectValue:l,tabValues:a}=n;const u=[],{blockElementScrollPositionUntilNextRender:o}=(0,r.a_)(),c=n=>{const t=n.currentTarget,e=u.indexOf(t),s=a[e].value;s!==i&&(o(t),l(s))},m=n=>{let t=null;switch(n.key){case"Enter":c(n);break;case"ArrowRight":{const e=u.indexOf(n.currentTarget)+1;t=u[e]??u[0];break}case"ArrowLeft":{const e=u.indexOf(n.currentTarget)-1;t=u[e]??u[u.length-1];break}}t?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":e},t),children:a.map((n=>{let{value:t,label:e,attributes:r}=n;return(0,x.jsx)("li",{role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,ref:n=>u.push(n),onKeyDown:m,onClick:c,...r,className:(0,s.A)("tabs__item",j.tabItem,r?.className,{"tabs__item--active":i===t}),children:e??t},t)}))})}function I(n){let{lazy:t,children:e,selectedValue:r}=n;const l=(Array.isArray(e)?e:[e]).filter(Boolean);if(t){const n=l.find((n=>n.props.value===r));return n?(0,i.cloneElement)(n,{className:(0,s.A)("margin-top--md",n.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:l.map(((n,t)=>(0,i.cloneElement)(n,{key:t,hidden:n.props.value!==r})))})}function y(n){const t=h(n);return(0,x.jsxs)("div",{className:(0,s.A)("tabs-container",j.tabList),children:[(0,x.jsx)(b,{...t,...n}),(0,x.jsx)(I,{...t,...n})]})}function v(n){const t=(0,f.A)();return(0,x.jsx)(y,{...n,children:m(n.children)},String(t))}},28453:(n,t,e)=>{e.d(t,{R:()=>l,x:()=>a});var i=e(96540);const s={},r=i.createContext(s);function l(n){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function a(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:l(n.components),i.createElement(r.Provider,{value:t},n.children)}}}]);