"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[3528],{47835:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>u,default:()=>m,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"stack-and-queue/stack/find-median-from-data-stream","title":"Find Median from Data Stream","description":"\u63cf\u8ff0","source":"@site/docs/stack-and-queue/stack/find-median-from-data-stream.md","sourceDirName":"stack-and-queue/stack","slug":"/stack-and-queue/stack/find-median-from-data-stream","permalink":"/stack-and-queue/stack/find-median-from-data-stream","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Find Median from Data Stream"},"sidebar":"docs","previous":{"title":"Implement Stack using Queues","permalink":"/stack-and-queue/stack/implement-stack-using-queues"},"next":{"title":"Minimum Number of Swaps to Make the String Balanced","permalink":"/stack-and-queue/stack/minimum-number-of-swaps-to-make-the-string-balanced"}}');var r=a(74848),i=a(28453),l=a(11470),s=a(19365);const o={title:"Find Median from Data Stream"},u=void 0,d={},c=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",level:3}];function p(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"\u63cf\u8ff0",children:"\u63cf\u8ff0"}),"\n",(0,r.jsx)(n.p,{children:"Median is the middle value in an ordered integer list. If the size of the list is even, there is no middle value. So the median is the mean of the two middle value."}),"\n",(0,r.jsxs)(n.p,{children:["For example,",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.code,{children:"[2,3,4]"}),", the median is ",(0,r.jsx)(n.code,{children:"3"}),(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.code,{children:"[2,3]"}),", the median is ",(0,r.jsx)(n.code,{children:"(2 + 3) / 2 = 2.5"})]}),"\n",(0,r.jsx)(n.p,{children:"Design a data structure that supports the following two operations:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"void addNum(int num)"})," - Add a integer number from the data stream to the data structure."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"double findMedian()"})," - Return the median of all elements so far."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["addNum(1)",(0,r.jsx)(n.br,{}),"\n","addNum(2)",(0,r.jsx)(n.br,{}),"\n","findMedian() -> 1.5",(0,r.jsx)(n.br,{}),"\n","addNum(3)",(0,r.jsx)(n.br,{}),"\n","findMedian() -> 2"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Follow up"}),":"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"If all integer numbers from the stream are between 0 and 100, how would you optimize it?"}),"\n",(0,r.jsx)(n.li,{children:"If 99% of all integer numbers from the stream are between 0 and 100, how would you optimize it?"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"\u5206\u6790",children:"\u5206\u6790"}),"\n",(0,r.jsxs)(n.p,{children:["\u6c42\u4e2d\u4f4d\u6570\uff0c\u6700\u76f4\u89c2\u7684\u65b9\u6cd5\u662f\u628a\u6570\u7ec4\u6392\u5e8f\uff0c\u7136\u540e ",(0,r.jsx)(n.code,{children:"n/2"})," \u4f4d\u7f6e\u7684\u6570\u5c31\u662f\u4e2d\u4f4d\u6570\u3002",(0,r.jsx)(n.code,{children:"addNum()"}),"\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(1), ",(0,r.jsx)(n.code,{children:"findMedian()"}),"\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f n(logn)\u3002"]}),"\n",(0,r.jsxs)(n.p,{children:["\u4e3a\u4e86\u63d0\u9ad8 ",(0,r.jsx)(n.code,{children:"findMedian()"}),"\u7684\u901f\u5ea6\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 ",(0,r.jsx)(n.code,{children:"addNum()"}),"\u6e90\u6e90\u4e0d\u65ad\u63d2\u5165\u65b0\u5143\u7d20\u7684\u65f6\u5019\uff0c\u4f7f\u7528\u63d2\u5165\u6392\u5e8f\uff0c\u4fdd\u8bc1\u6570\u7ec4\u662f\u5df2\u7ecf\u6392\u5e8f\u597d\u4e86\u7684\uff0c\u8fd9\u6837 ",(0,r.jsx)(n.code,{children:"findMedian()"}),"\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(1), ",(0,r.jsx)(n.code,{children:"addNum()"}),"\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(logn)+O(n)=O(n)\uff0c\u56e0\u4e3a\u4e8c\u5206\u67e5\u627e\u63d2\u5165\u4f4d\u7f6e\u9700\u8981 O(logn)\uff0c\u540e\u9762\u7684\u5143\u7d20\u5168\u90e8\u5e73\u79fb\u9700\u8981 O(n)\u3002"]}),"\n",(0,r.jsx)(n.p,{children:"\u5bf9\u4e8e\u67e5\u627e\u4e2d\u4f4d\u6570\u8fd9\u4e2a\u9700\u6c42\uff0c\u628a\u6574\u4e2a\u6570\u7ec4\u6392\u5e8f\u6709\u70b9\u8ba1\u7b97\u8fc7\u5934\u4e86\uff0c\u56e0\u6b64\u80af\u5b9a\u4e0d\u662f\u6700\u5feb\u7684\u3002\u4e0b\u9762\u5f00\u59cb\u8ba8\u8bba\u4e00\u79cd\u66f4\u5feb\u7684\u65b9\u6cd5\u3002"}),"\n",(0,r.jsxs)(n.p,{children:["\u53ef\u4ee5\u4f7f\u7528\u4e24\u4e2a\u5806\uff0c\u4e00\u4e2a\u5927\u6839\u5806\uff0c\u4e00\u4e2a\u5c0f\u6839\u5806\uff0c\u5927\u6839\u5806\u5b58\u653e\u8f83\u5c0f\u7684\u4e00\u534a\u5143\u7d20\uff0c\u5c0f\u6839\u5806\u5b58\u653e\u8f83\u5927\u7684\u4e00\u534a\u5143\u7d20\uff0c\u7ef4\u6301\u4e24\u4e2a\u5806\u7684\u5927\u5c0f\u76f8\u540c\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u5806\u7684\u6839\u8282\u70b9\u5c31\u662f\u4e2d\u4f4d\u6570\u3002\u5f53 n \u4e3a\u5947\u6570\u65f6\uff0c\u4e2d\u4f4d\u6570\u5c31\u662f\u5927\u6839\u5806\u7684\u6839\u8282\u70b9\uff0c\u5f53 n \u4e3a\u5076\u6570\u65f6\uff0c\u4e2d\u4f4d\u6570\u5c31\u662f\u4e24\u4e2a\u5806\u7684\u6839\u8282\u70b9\u4e4b\u548c\u9664\u4ee5 2\u3002",(0,r.jsx)(n.code,{children:"addNum()"}),"\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(logn), ",(0,r.jsx)(n.code,{children:"findMedian()"}),"\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(1)\u3002"]}),"\n",(0,r.jsx)(n.h3,{id:"\u4ee3\u7801",children:"\u4ee3\u7801"}),"\n","\n",(0,r.jsxs)(l.A,{defaultValue:"python",values:[{label:"Python",value:"python"},{label:"Java",value:"java"},{label:"C++",value:"cpp"}],children:[(0,r.jsx)(s.A,{value:"python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Median of Data Stream\n# Using two heaps\n# Overall Space Complexity: O(n)\nclass MedianFinder:\n\n    def __init__(self):\n        self.min_heap = []\n        self.max_heap = []\n\n    def addNum(self, num: int) -> None:\n        """Time Complexity: O(logn)"""\n        root = heapq.heappushpop(self.max_heap,-num)\n        heapq.heappush(self.min_heap, -root)\n        while len(self.max_heap) < len(self.min_heap):\n            root = heapq.heappop(self.min_heap)\n            heapq.heappush(self.max_heap, -root)\n\n    def findMedian(self) -> float:\n        """Time Complexity: O(1)"""\n        if len(self.max_heap) == len(self.min_heap):\n            return (-self.max_heap[0]  + self.min_heap[0])/2\n        else:\n            return -self.max_heap[0]\n'})})}),(0,r.jsx)(s.A,{value:"java",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"// Median of Data Stream\n// Using two heaps\n// Overall Space Complexity: O(n)\nclass MedianFinder {\n    private PriorityQueue<Integer> maxHeap;\n    private PriorityQueue<Integer> minHeap;\n\n    public MedianFinder() {\n        maxHeap = new PriorityQueue<>();\n        minHeap = new PriorityQueue<>((a,b) ->  -1 * Integer.compare(a, b));\n    }\n\n    // Time Complexity: O(logn)\n    public void addNum(int num) {\n        maxHeap.offer(num);\n\n        minHeap.offer(maxHeap.poll());\n\n        if (maxHeap.size() < minHeap.size()) {\n            maxHeap.offer(minHeap.poll());\n        }\n    }\n\n    // Time Complexity: O(1)\n    public double findMedian() {\n        if (maxHeap.size() == minHeap.size()) {\n            return (maxHeap.peek() + minHeap.peek()) * 0.5;\n        } else {\n            return maxHeap.peek();\n        }\n    }\n}\n"})})}),(0,r.jsx)(s.A,{value:"cpp",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"// Median of Data Stream\n// Using two heaps\n// Overall Space Complexity: O(n)\nclass MedianFinder {\n    priority_queue<int> max_heap;\n    priority_queue<int, vector<int>, greater<int>> min_heap;\n\npublic:\n    // Time Complexity: O(logn)\n    void addNum(int num) {\n        max_heap.push(num);\n\n        min_heap.push(max_heap.top());\n        max_heap.pop();\n\n        if (max_heap.size() < min_heap.size()) {\n            max_heap.push(min_heap.top());\n            min_heap.pop();\n        }\n    }\n\n    // Time Complexity: O(1)\n    double findMedian() {\n        if (max_heap.size() == min_heap.size()) {\n            return (max_heap.top() + min_heap.top()) * 0.5;\n        } else {\n            return max_heap.top();\n        }\n    }\n};\n"})})})]}),"\n",(0,r.jsx)(n.h3,{id:"\u76f8\u5173\u9898\u76ee",children:"\u76f8\u5173\u9898\u76ee"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"../queue/moving-average-from-data-stream",children:"Moving Average from Data Stream"})}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},19365:(e,n,a)=>{a.d(n,{A:()=>l});a(96540);var t=a(34164);const r={tabItem:"tabItem_Ymn6"};var i=a(74848);function l(e){let{children:n,hidden:a,className:l}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,t.A)(r.tabItem,l),hidden:a,children:n})}},11470:(e,n,a)=>{a.d(n,{A:()=>_});var t=a(96540),r=a(34164),i=a(23104),l=a(56347),s=a(205),o=a(57485),u=a(31682),d=a(70679);function c(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:a}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return c(e).map((e=>{let{props:{value:n,label:a,attributes:t,default:r}}=e;return{value:n,label:a,attributes:t,default:r}}))}(a);return function(e){const n=(0,u.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,a])}function m(e){let{value:n,tabValues:a}=e;return a.some((e=>e.value===n))}function h(e){let{queryString:n=!1,groupId:a}=e;const r=(0,l.W6)(),i=function(e){let{queryString:n=!1,groupId:a}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:n,groupId:a});return[(0,o.aZ)(i),(0,t.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(r.location.search);n.set(i,e),r.replace({...r.location,search:n.toString()})}),[i,r])]}function f(e){const{defaultValue:n,queryString:a=!1,groupId:r}=e,i=p(e),[l,o]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=a.find((e=>e.default))??a[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:i}))),[u,c]=h({queryString:a,groupId:r}),[f,x]=function(e){let{groupId:n}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,i]=(0,d.Dv)(a);return[r,(0,t.useCallback)((e=>{a&&i.set(e)}),[a,i])]}({groupId:r}),b=(()=>{const e=u??f;return m({value:e,tabValues:i})?e:null})();(0,s.A)((()=>{b&&o(b)}),[b]);return{selectedValue:l,selectValue:(0,t.useCallback)((e=>{if(!m({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);o(e),c(e),x(e)}),[c,x,i]),tabValues:i}}var x=a(92303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=a(74848);function j(e){let{className:n,block:a,selectedValue:t,selectValue:l,tabValues:s}=e;const o=[],{blockElementScrollPositionUntilNextRender:u}=(0,i.a_)(),d=e=>{const n=e.currentTarget,a=o.indexOf(n),r=s[a].value;r!==t&&(u(n),l(r))},c=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=o.indexOf(e.currentTarget)+1;n=o[a]??o[0];break}case"ArrowLeft":{const a=o.indexOf(e.currentTarget)-1;n=o[a]??o[o.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":a},n),children:s.map((e=>{let{value:n,label:a,attributes:i}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>o.push(e),onKeyDown:c,onClick:d,...i,className:(0,r.A)("tabs__item",b.tabItem,i?.className,{"tabs__item--active":t===n}),children:a??n},n)}))})}function g(e){let{lazy:n,children:a,selectedValue:i}=e;const l=(Array.isArray(a)?a:[a]).filter(Boolean);if(n){const e=l.find((e=>e.props.value===i));return e?(0,t.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:l.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function y(e){const n=f(e);return(0,v.jsxs)("div",{className:(0,r.A)("tabs-container",b.tabList),children:[(0,v.jsx)(j,{...n,...e}),(0,v.jsx)(g,{...n,...e})]})}function _(e){const n=(0,x.A)();return(0,v.jsx)(y,{...e,children:c(e.children)},String(n))}},28453:(e,n,a)=>{a.d(n,{R:()=>l,x:()=>s});var t=a(96540);const r={},i=t.createContext(r);function l(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);