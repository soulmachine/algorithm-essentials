"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[9465],{90493:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"brute-force/permutations","title":"Permutations","description":"\u63cf\u8ff0","source":"@site/docs/brute-force/permutations.md","sourceDirName":"brute-force","slug":"/brute-force/permutations","permalink":"/brute-force/permutations","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Permutations"},"sidebar":"docs","previous":{"title":"Subsets II","permalink":"/brute-force/subsets-ii"},"next":{"title":"Permutations II","permalink":"/brute-force/permutations-ii"}}');var a=t(74848),i=t(28453),s=t(11470),u=t(19365);const l={title:"Permutations"},o=void 0,c={},d=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3},{value:"\u9012\u5f52",id:"\u9012\u5f52",level:4},{value:"next_permutation()",id:"next_permutation",level:4},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",level:3}];function p(e){const n={a:"a",code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h3,{id:"\u63cf\u8ff0",children:"\u63cf\u8ff0"}),"\n",(0,a.jsx)(n.p,{children:"Given a collection of numbers, return all possible permutations."}),"\n",(0,a.jsxs)(n.p,{children:["For example,\n",(0,a.jsx)(n.code,{children:"[1,2,3]"})," have the following permutations:\n",(0,a.jsx)(n.code,{children:"[1,2,3], [1,3,2], [2,1,3], [2,3,1], [3,1,2]"}),", and ",(0,a.jsx)(n.code,{children:"[3,2,1]"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"\u4ee3\u7801",children:"\u4ee3\u7801"}),"\n","\n",(0,a.jsx)(n.h4,{id:"\u9012\u5f52",children:"\u9012\u5f52"}),"\n",(0,a.jsxs)(s.A,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],children:[(0,a.jsx)(u.A,{value:"java",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"// Permutations\n// Recursive\n// Time Complexity: O(n!), Space Complexity: O(n)\npublic class Solution {\n    public List<List<Integer>> permute(int[] nums) {\n        Arrays.sort(nums);\n        List<List<Integer>> result = new ArrayList<>();\n        dfs(nums, 0, result);\n        return result;\n    }\n\n    private static void dfs(int[] nums, int start, List<List<Integer>> result) {\n        if (start == nums.length) {\n            result.add(Arrays.stream(nums).boxed().collect(Collectors.toList()));\n            return;\n        }\n\n        for (int i = start; i < nums.length; i++) {\n            swap(nums, start, i);\n            dfs(nums, start + 1, result);\n            swap(nums, start, i); // restore\n        }\n    }\n\n    private static void swap(int[] nums, int i, int j) {\n        int tmp = nums[i];\n        nums[i] = nums[j];\n        nums[j] = tmp;\n    }\n}\n"})})}),(0,a.jsx)(u.A,{value:"cpp",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cpp",children:"// Permutations\n// \u6df1\u641c\uff0c\u589e\u91cf\u6784\u9020\u6cd5\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n!)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\nclass Solution {\npublic:\n    vector<vector<int> > permute(vector<int>& num) {\n        sort(num.begin(), num.end());\n\n        vector<vector<int>> result;\n        vector<int> path;  // \u4e2d\u95f4\u7ed3\u679c\n\n        dfs(num, path, result);\n        return result;\n    }\nprivate:\n    void dfs(const vector<int>& num, vector<int> &path,\n            vector<vector<int> > &result) {\n        if (path.size() == num.size()) {  // \u6536\u655b\u6761\u4ef6\n            result.push_back(path);\n            return;\n        }\n\n        // \u6269\u5c55\u72b6\u6001\n        for (auto i : num) {\n            // \u67e5\u627e i \u662f\u5426\u5728path \u4e2d\u51fa\u73b0\u8fc7\n            auto pos = find(path.begin(), path.end(), i);\n\n            if (pos == path.end()) {\n                path.push_back(i);\n                dfs(num, path, result);\n                path.pop_back();\n            }\n        }\n    }\n};\n"})})})]}),"\n",(0,a.jsx)(n.h4,{id:"next_permutation",children:"next_permutation()"}),"\n",(0,a.jsxs)(n.p,{children:["\u51fd\u6570 ",(0,a.jsx)(n.code,{children:"next_permutation()"}),"\u7684\u5177\u4f53\u5b9e\u73b0\u89c1\u8fd9\u8282 ",(0,a.jsx)(n.a,{href:"/array/next-permutation",children:"Next Permutation"}),"\u3002"]}),"\n",(0,a.jsxs)(s.A,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],children:[(0,a.jsx)(u.A,{value:"java",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"// Permutations\n// \u91cd\u65b0\u5b9e\u73b0 next_permutation()\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n!)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(1)\npublic class Solution {\n    public List<List<Integer>> permute(int[] nums) {\n        List<List<Integer>> result = new ArrayList<>();\n        Arrays.sort(nums);\n\n        do {\n            ArrayList<Integer> one = new ArrayList<>();\n            for (int i : nums) {\n                one.add(i);\n            }\n            result.add(one);\n            // \u8c03\u7528\u7684\u662f 2.1.12 \u8282\u7684 next_permutation()\n            // \u800c\u4e0d\u662f std::next_permutation()\n        } while(nextPermutation(nums, 0, nums.length));\n        return result;\n    }\n    // \u4ee3\u7801\u6765\u81ea 2.1.12 \u8282\u7684 next_permutation()\n    private static boolean nextPermutation(int[] nums, int begin, int end) {\n        // From right to left, find the first digit(partitionNumber)\n        // which violates the increase trend\n        int p = end - 2;\n        while (p > -1 && nums[p] >= nums[p + 1]) --p;\n\n        // If not found, which means current sequence is already the largest\n        // permutation, then rearrange to the first permutation and return false\n        if(p == -1) {\n            reverse(nums, begin, end);\n            return false;\n        }\n\n        // From right to left, find the first digit which is greater\n        // than the partition number, call it changeNumber\n        int c = end - 1;\n        while (c > 0 && nums[c] <= nums[p]) --c;\n\n        // Swap the partitionNumber and changeNumber\n        swap(nums, p, c);\n        // Reverse all the digits on the right of partitionNumber\n        reverse(nums, p+1, end);\n        return true;\n    }\n    private static void swap(int[] nums, int i, int j) {\n        int tmp = nums[i];\n        nums[i] = nums[j];\n        nums[j] = tmp;\n    }\n    private static void reverse(int[] nums, int begin, int end) {\n        end--;\n        while (begin < end) {\n            swap(nums, begin++, end--);\n        }\n    }\n}\n"})})}),(0,a.jsx)(u.A,{value:"cpp",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cpp",children:"// Permutations\n// \u91cd\u65b0\u5b9e\u73b0 next_permutation()\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n!)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(1)\nclass Solution {\npublic:\n    vector<vector<int> > permute(vector<int> &num) {\n        vector<vector<int> > result;\n        sort(num.begin(), num.end());\n\n        do {\n            result.push_back(num);\n        // \u8c03\u7528\u7684\u662f 2.1.12 \u8282\u7684 next_permutation()\n        // \u800c\u4e0d\u662f std::next_permutation()\n        } while(next_permutation(num.begin(), num.end()));\n        return result;\n    }\nprivate:\n    // \u4ee3\u7801\u6765\u81ea 2.1.12 \u8282\u7684 next_permutation()\n    void nextPermutation(vector<int> &nums) {\n        next_permutation(nums.begin(), nums.end());\n    }\n\n    template<typename BidiIt>\n    bool next_permutation(BidiIt first, BidiIt last) {\n        // Get a reversed range to simplify reversed traversal.\n        const auto rfirst = reverse_iterator<BidiIt>(last);\n        const auto rlast = reverse_iterator<BidiIt>(first);\n\n        // Begin from the second last element to the first element.\n        auto pivot = next(rfirst);\n\n        // Find `pivot`, which is the first element that is no less than its\n        // successor.  `Prev` is used since `pivort` is a `reversed_iterator`.\n        while (pivot != rlast && *pivot >= *prev(pivot))\n            ++pivot;\n\n        // No such elemenet found, current sequence is already the largest\n        // permutation, then rearrange to the first permutation and return false.\n        if (pivot == rlast) {\n            reverse(rfirst, rlast);\n            return false;\n        }\n\n        // Scan from right to left, find the first element that is greater than\n        // `pivot`.\n        auto change = find_if(rfirst, pivot, bind1st(less<int>(), *pivot));\n\n        swap(*change, *pivot);\n        reverse(rfirst, pivot);\n\n        return true;\n    }\n};\n"})})})]}),"\n",(0,a.jsx)(n.h3,{id:"\u76f8\u5173\u9898\u76ee",children:"\u76f8\u5173\u9898\u76ee"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/array/next-permutation",children:"Next Permutation"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/array/permutation-sequence",children:"Permutation Sequence"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/brute-force/permutations-ii",children:"Permutations II"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/brute-force/combinations",children:"Combinations"})}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},19365:(e,n,t)=>{t.d(n,{A:()=>s});t(96540);var r=t(34164);const a={tabItem:"tabItem_Ymn6"};var i=t(74848);function s(e){let{children:n,hidden:t,className:s}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,r.A)(a.tabItem,s),hidden:t,children:n})}},11470:(e,n,t)=>{t.d(n,{A:()=>y});var r=t(96540),a=t(34164),i=t(23104),s=t(56347),u=t(205),l=t(57485),o=t(31682),c=t(70679);function d(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:a}}=e;return{value:n,label:t,attributes:r,default:a}}))}(t);return function(e){const n=(0,o.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function m(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function h(e){let{queryString:n=!1,groupId:t}=e;const a=(0,s.W6)(),i=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(i),(0,r.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(a.location.search);n.set(i,e),a.replace({...a.location,search:n.toString()})}),[i,a])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,i=p(e),[s,l]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:i}))),[o,d]=h({queryString:t,groupId:a}),[f,v]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,i]=(0,c.Dv)(t);return[a,(0,r.useCallback)((e=>{t&&i.set(e)}),[t,i])]}({groupId:a}),b=(()=>{const e=o??f;return m({value:e,tabValues:i})?e:null})();(0,u.A)((()=>{b&&l(b)}),[b]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),v(e)}),[d,v,i]),tabValues:i}}var v=t(92303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=t(74848);function g(e){let{className:n,block:t,selectedValue:r,selectValue:s,tabValues:u}=e;const l=[],{blockElementScrollPositionUntilNextRender:o}=(0,i.a_)(),c=e=>{const n=e.currentTarget,t=l.indexOf(n),a=u[t].value;a!==r&&(o(n),s(a))},d=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":t},n),children:u.map((e=>{let{value:n,label:t,attributes:i}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>l.push(e),onKeyDown:d,onClick:c,...i,className:(0,a.A)("tabs__item",b.tabItem,i?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function j(e){let{lazy:n,children:t,selectedValue:i}=e;const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===i));return e?(0,r.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function w(e){const n=f(e);return(0,x.jsxs)("div",{className:(0,a.A)("tabs-container",b.tabList),children:[(0,x.jsx)(g,{...n,...e}),(0,x.jsx)(j,{...n,...e})]})}function y(e){const n=(0,v.A)();return(0,x.jsx)(w,{...e,children:d(e.children)},String(n))}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>u});var r=t(96540);const a={},i=r.createContext(a);function s(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function u(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);