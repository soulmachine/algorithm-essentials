"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[9354],{78969:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"dfs/combination-sum-iii","title":"Combination Sum III","description":"\u63cf\u8ff0","source":"@site/docs/dfs/combination-sum-iii.md","sourceDirName":"dfs","slug":"/dfs/combination-sum-iii","permalink":"/en/dfs/combination-sum-iii","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Combination Sum III"},"sidebar":"docs","previous":{"title":"Combination Sum II","permalink":"/en/dfs/combination-sum-ii"},"next":{"title":"Generate Parentheses","permalink":"/en/dfs/generate-parentheses"}}');var s=i(74848),r=i(28453);const a={title:"Combination Sum III"},o=void 0,l={},c=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",level:3}];function d(n){const e={a:"a",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h3,{id:"\u63cf\u8ff0",children:"\u63cf\u8ff0"}),"\n",(0,s.jsxs)(e.p,{children:["Find all possible combinations of ",(0,s.jsx)(e.code,{children:"k"})," numbers that add up to a number ",(0,s.jsx)(e.code,{children:"n"}),", given that only numbers from 1 to 9 can be used and each combination should be a unique set of numbers."]}),"\n",(0,s.jsx)(e.p,{children:"Ensure that numbers within the set are sorted in ascending order."}),"\n",(0,s.jsx)(e.p,{children:"** Example 1**:"}),"\n",(0,s.jsxs)(e.p,{children:["Input: ",(0,s.jsx)(e.code,{children:"k"}),"=3, ",(0,s.jsx)(e.code,{children:"n"}),"=7"]}),"\n",(0,s.jsxs)(e.p,{children:["Output: ",(0,s.jsx)(e.code,{children:"[[1,2,4]]"})]}),"\n",(0,s.jsx)(e.p,{children:"** Example 2**:"}),"\n",(0,s.jsxs)(e.p,{children:["Input: ",(0,s.jsx)(e.code,{children:"k"}),"=3, ",(0,s.jsx)(e.code,{children:"n"}),"=9"]}),"\n",(0,s.jsxs)(e.p,{children:["Output: ",(0,s.jsx)(e.code,{children:"[[1,2,6], [1,3,5], [2,3,4]]"})]}),"\n",(0,s.jsx)(e.h3,{id:"\u5206\u6790",children:"\u5206\u6790"}),"\n",(0,s.jsx)(e.p,{children:"\u8fd9\u662f\u4e00\u4e2a\u591a\u9636\u6bb5\u95ee\u9898\uff0c\u76ee\u6807\u662f\u6c42\u6240\u6709\u89e3\uff0c\u663e\u7136\u7528\u6df1\u641c+\u526a\u679d\uff0c\u5373\u56de\u6eaf\u6cd5\u3002"}),"\n",(0,s.jsx)(e.h3,{id:"\u4ee3\u7801",children:"\u4ee3\u7801"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-java",children:"// Combination Sum III\n// Time Complexity: O(9*8*...*(10-k)), Space Complexity: O(k)\npublic class Solution {\n    public List<List<Integer>> combinationSum3(int k, int n) {\n        final List<List<Integer>> result = new ArrayList<>();\n        final List<Integer> path = new ArrayList<>();\n        dfs(k, n, path, result);\n        return result;\n    }\n\n    private static void dfs(int step, int gap, List<Integer> path,\n                            List<List<Integer>> result) {\n        if (step == 0) {\n            if (gap == 0) {\n                result.add(new ArrayList<>(path));\n            }\n            return;\n        }\n\n        if (gap < 1) return;\n\n        final int start = path.isEmpty() ? 1 : path.get(path.size() - 1)+1;\n        for (int i = start; i < 10; ++i) {\n            path.add(i);\n            dfs(step - 1, gap - i, path, result);\n            path.remove(path.size() - 1);\n        }\n    }\n}\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\u76f8\u5173\u9898\u76ee",children:"\u76f8\u5173\u9898\u76ee"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"/en/dfs/combination-sum",children:"Combination Sum"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"/en/dfs/combination-sum-ii",children:"Combination Sum II"})}),"\n"]})]})}function u(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}},28453:(n,e,i)=>{i.d(e,{R:()=>a,x:()=>o});var t=i(96540);const s={},r=t.createContext(s);function a(n){const e=t.useContext(r);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:a(n.components),t.createElement(r.Provider,{value:e},n.children)}}}]);