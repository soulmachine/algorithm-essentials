"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[6634],{47258:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>u,contentTitle:()=>c,default:()=>d,frontMatter:()=>o,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"dp/frog-jump","title":"Frog Jump","description":"\u63cf\u8ff0","source":"@site/docs/dp/frog-jump.md","sourceDirName":"dp","slug":"/dp/frog-jump","permalink":"/en/dp/frog-jump","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Frog Jump"},"sidebar":"docs","previous":{"title":"Range Sum Query 2D - Immutable","permalink":"/en/dp/range-sum-query-2d-immutable"},"next":{"title":"Longest String Chain","permalink":"/en/dp/longest-string-chain"}}');var a=n(74848),r=n(28453),i=n(11470),l=n(19365);const o={title:"Frog Jump"},c=void 0,u={},h=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3}];function m(e){const s={annotation:"annotation",blockquote:"blockquote",br:"br",code:"code",h3:"h3",li:"li",math:"math",mi:"mi",mn:"mn",mrow:"mrow",msup:"msup",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.h3,{id:"\u63cf\u8ff0",children:"\u63cf\u8ff0"}),"\n",(0,a.jsx)(s.p,{children:"A frog is crossing a river. The river is divided into x units and at each unit there may or may not exist a stone. The frog can jump on a stone, but it must not jump into the water."}),"\n",(0,a.jsx)(s.p,{children:"Given a list of stones' positions (in units) in sorted ascending order, determine if the frog is able to cross the river by landing on the last stone. Initially, the frog is on the first stone and assume the first jump must be 1 unit."}),"\n",(0,a.jsx)(s.p,{children:"If the frog's last jump was k units, then its next jump must be either k - 1, k, or k + 1 units. Note that the frog can only jump in the forward direction."}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Note"}),":"]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"The number of stones is \u2265 2 and is < 1,100."}),"\n",(0,a.jsxs)(s.li,{children:["Each stone's position will be a non-negative integer < ",(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsx)(s.mrow,{children:(0,a.jsxs)(s.msup,{children:[(0,a.jsx)(s.mn,{children:"2"}),(0,a.jsx)(s.mn,{children:"31"})]})}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"2^{31}"})]})})}),(0,a.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.8141em"}}),(0,a.jsxs)(s.span,{className:"mord",children:[(0,a.jsx)(s.span,{className:"mord",children:"2"}),(0,a.jsx)(s.span,{className:"msupsub",children:(0,a.jsx)(s.span,{className:"vlist-t",children:(0,a.jsx)(s.span,{className:"vlist-r",children:(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.8141em"},children:(0,a.jsxs)(s.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,a.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,a.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsx)(s.span,{className:"mord mtight",children:(0,a.jsx)(s.span,{className:"mord mtight",children:"31"})})})]})})})})})]})]})})]}),"."]}),"\n",(0,a.jsx)(s.li,{children:"The first stone's position is always 0."}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Example 1"}),":"]}),"\n",(0,a.jsxs)(s.blockquote,{children:["\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.strong,{children:"[0,1,3,5,6,8,12,17]"})}),"\n",(0,a.jsxs)(s.p,{children:["There are a total of 8 stones.",(0,a.jsx)(s.br,{}),"\n","The first stone at the 0th unit, second stone at the 1st unit,",(0,a.jsx)(s.br,{}),"\n","third stone at the 3rd unit, and so on...",(0,a.jsx)(s.br,{}),"\n","The last stone at the 17th unit."]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Return true"}),". The frog can jump to the last stone by jumping",(0,a.jsx)(s.br,{}),"\n","1 unit to the 2nd stone, then 2 units to the 3rd stone, then",(0,a.jsx)(s.br,{}),"\n","2 units to the 4th stone, then 3 units to the 6th stone,",(0,a.jsx)(s.br,{}),"\n","4 units to the 7th stone, and 5 units to the 8th stone."]}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Example 2"}),":"]}),"\n",(0,a.jsxs)(s.blockquote,{children:["\n",(0,a.jsx)(s.p,{children:"[0,1,2,3,4,8,9,11]"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Return false"}),". There is no way to jump to the last stone as\nthe gap between the 5th and 6th stone is too large."]}),"\n"]}),"\n",(0,a.jsx)(s.h3,{id:"\u5206\u6790",children:"\u5206\u6790"}),"\n",(0,a.jsx)(s.p,{children:"\u7528\u4e00\u4e2a HashMap, key \u4e3a\u77f3\u5934\u7684\u4f4d\u7f6e\uff0cvalue \u662f\u4e00\u4e2a\u6574\u6570\u96c6\u5408, \u5176\u4e2d\u6bcf\u4e2a\u6574\u6570\u8868\u793a jumpsize, \u8868\u793a\u53ef\u4ee5\u901a\u8fc7\u5927\u5c0f\u4e3a jumpsize \u7684\u4e00\u8df3\u53ef\u4ee5\u5230\u8fbe\u5f53\u524d\u77f3\u5934\u4f4d\u7f6e\u3002"}),"\n",(0,a.jsx)(s.p,{children:"\u9996\u5148\u521d\u59cb\u5316\u8be5 HashMap, \u4f4d\u7f6e 0 \u5bf9\u5e94 value \u4e3a\u4e00\u4e2a\u5305\u542b 0 \u7684\u96c6\u5408\uff0c\u5176\u4f59\u90fd\u521d\u59cb\u5316\u4e3a\u7a7a\u96c6\u3002\u63a5\u4e0b\u6765\uff0c\u904d\u5386\u6574\u4e2a\u77f3\u5934\u5217\u8868\uff0c\u5bf9\u6bcf\u4e2a\u77f3\u5934\uff0c\u904d\u5386 value \u4e2d\u6bcf\u4e2a jumpsize\uff0c\u5224\u65ad\u4f4d\u7f6e currentPosition + newjumpsize \u662f\u5426\u5b58\u5728\u4e8e HashMap \u4e2d\uff0c\u5bf9\u4e8e\u6bcf\u4e2a jumpsizej\uff0cnewjumpsize \u5206\u522b\u4e3a jumpsize-1, jumpsize\uff0cjumpsize+1\u3002\u5982\u679c\u627e\u5230\u4e86\uff0c\u5c31\u5728\u5bf9\u5e94\u7684 value \u96c6\u5408\u91cc\u65b0\u589e newjumpsize\u3002\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\u76f4\u5230\u7ed3\u675f\u3002\u5982\u679c\u5728\u7ed3\u675f\u7684\u65f6\u5019\uff0c\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u5bf9\u5e94\u7684\u96c6\u5408\u975e\u7a7a\uff0c\u90a3\u4e5f\u5c31\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u5230\u8fbe\u7ec8\u70b9\uff0c\u5982\u679c\u8fd8\u662f\u7a7a\u96c6\u90a3\u5c31\u610f\u5473\u7740\u4e0d\u80fd\u5230\u8fbe\u7ec8\u70b9\u3002"}),"\n",(0,a.jsxs)(s.p,{children:["\u65f6\u95f4\u590d\u6742\u5ea6 O(",(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsx)(s.mrow,{children:(0,a.jsxs)(s.msup,{children:[(0,a.jsx)(s.mi,{children:"n"}),(0,a.jsx)(s.mn,{children:"2"})]})}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"n^2"})]})})}),(0,a.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.8141em"}}),(0,a.jsxs)(s.span,{className:"mord",children:[(0,a.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,a.jsx)(s.span,{className:"msupsub",children:(0,a.jsx)(s.span,{className:"vlist-t",children:(0,a.jsx)(s.span,{className:"vlist-r",children:(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.8141em"},children:(0,a.jsxs)(s.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,a.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,a.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsx)(s.span,{className:"mord mtight",children:"2"})})]})})})})})]})]})})]}),")\uff0c\u56e0\u4e3a\u6709\u4e24\u5c42\u5faa\u73af\u3002\u7a7a\u95f4\u590d\u6742\u5ea6 O(",(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsx)(s.mrow,{children:(0,a.jsxs)(s.msup,{children:[(0,a.jsx)(s.mi,{children:"n"}),(0,a.jsx)(s.mn,{children:"2"})]})}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"n^2"})]})})}),(0,a.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.8141em"}}),(0,a.jsxs)(s.span,{className:"mord",children:[(0,a.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,a.jsx)(s.span,{className:"msupsub",children:(0,a.jsx)(s.span,{className:"vlist-t",children:(0,a.jsx)(s.span,{className:"vlist-r",children:(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.8141em"},children:(0,a.jsxs)(s.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,a.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,a.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsx)(s.span,{className:"mord mtight",children:"2"})})]})})})})})]})]})})]}),")\uff0c\u56e0\u4e3a HashMap \u6700\u5927\u53ef\u4ee5\u6da8\u5230",(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsx)(s.mrow,{children:(0,a.jsxs)(s.msup,{children:[(0,a.jsx)(s.mi,{children:"n"}),(0,a.jsx)(s.mn,{children:"2"})]})}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"n^2"})]})})}),(0,a.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"0.8141em"}}),(0,a.jsxs)(s.span,{className:"mord",children:[(0,a.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,a.jsx)(s.span,{className:"msupsub",children:(0,a.jsx)(s.span,{className:"vlist-t",children:(0,a.jsx)(s.span,{className:"vlist-r",children:(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.8141em"},children:(0,a.jsxs)(s.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,a.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,a.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsx)(s.span,{className:"mord mtight",children:"2"})})]})})})})})]})]})})]}),"\u3002"]}),"\n",(0,a.jsx)(s.h3,{id:"\u4ee3\u7801",children:"\u4ee3\u7801"}),"\n","\n",(0,a.jsxs)(i.A,{defaultValue:"python",values:[{label:"Python",value:"python"},{label:"Java",value:"java"},{label:"C++",value:"cpp"}],children:[(0,a.jsx)(l.A,{value:"python",children:(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:"# Frog Jump\n# Dynamic programming\n# Time Complexity: O(n^2), Space Complexity : O(n^2)\nclass Solution:\n    def canCross(self, stones: List[int]) -> bool:\n        m = {}\n        for i in range(len(stones)):\n            m[stones[i]] = set()\n        m[0].add(0)\n\n        for i in range(len(stones)):\n            for k in m[stones[i]]:\n                for step in range(k-1, k+2):\n                    if step > 0 and (stones[i] + step) in m:\n                        m[stones[i] + step].add(step)\n        return len(m[stones[-1]]) > 0\n"})})}),(0,a.jsx)(l.A,{value:"java",children:(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-java",children:"// Frog Jump\n// Dynamic programming\n// Time Complexity: O(n^2), Space Complexity : O(n^2)\nclass Solution {\n    public boolean canCross(int[] stones) {\n        Map<Integer, Set<Integer>> map = new HashMap<>();\n        for (int i = 0; i < stones.length; i++) {\n            map.put(stones[i], new HashSet<Integer>());\n        }\n        map.get(0).add(0);\n\n        for (int i = 0; i < stones.length; i++) {\n            for (int k : map.get(stones[i])) {\n                for (int step = k - 1; step <= k + 1; step++) {\n                    if (step > 0 && map.containsKey(stones[i] + step)) {\n                        map.get(stones[i] + step).add(step);\n                    }\n                }\n            }\n        }\n        return map.get(stones[stones.length - 1]).size() > 0;\n    }\n}\n"})})}),(0,a.jsx)(l.A,{value:"cpp",children:(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-cpp",children:"// Frog Jump\n// Dynamic programming\n// Time Complexity: O(n^2), Space Complexity : O(n^2)\nclass Solution {\npublic:\n    bool canCross(vector<int>& stones) {\n        unordered_map<int, unordered_set<int>> map;\n        for (int i = 0; i < stones.size(); i++) {\n            map[stones[i]] = unordered_set<int>();\n        }\n        map[0].insert(0);\n\n        for (int i = 0; i < stones.size(); i++) {\n            for (int k : map[stones[i]]) {\n                for (int step = k - 1; step <= k + 1; step++) {\n                    if (step > 0 && map.count(stones[i] + step)) {\n                        map[stones[i] + step].insert(step);\n                    }\n                }\n            }\n        }\n        return map[stones[stones.size() - 1]].size() > 0;\n    }\n};\n\n"})})})]})]})}function d(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},19365:(e,s,n)=>{n.d(s,{A:()=>i});n(96540);var t=n(34164);const a={tabItem:"tabItem_Ymn6"};var r=n(74848);function i(e){let{children:s,hidden:n,className:i}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,t.A)(a.tabItem,i),hidden:n,children:s})}},11470:(e,s,n)=>{n.d(s,{A:()=>y});var t=n(96540),a=n(34164),r=n(23104),i=n(56347),l=n(205),o=n(57485),c=n(31682),u=n(70679);function h(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:s}=e;return!!s&&"object"==typeof s&&"value"in s}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:s,children:n}=e;return(0,t.useMemo)((()=>{const e=s??function(e){return h(e).map((e=>{let{props:{value:s,label:n,attributes:t,default:a}}=e;return{value:s,label:n,attributes:t,default:a}}))}(n);return function(e){const s=(0,c.XI)(e,((e,s)=>e.value===s.value));if(s.length>0)throw new Error(`Docusaurus error: Duplicate values "${s.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[s,n])}function d(e){let{value:s,tabValues:n}=e;return n.some((e=>e.value===s))}function p(e){let{queryString:s=!1,groupId:n}=e;const a=(0,i.W6)(),r=function(e){let{queryString:s=!1,groupId:n}=e;if("string"==typeof s)return s;if(!1===s)return null;if(!0===s&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:s,groupId:n});return[(0,o.aZ)(r),(0,t.useCallback)((e=>{if(!r)return;const s=new URLSearchParams(a.location.search);s.set(r,e),a.replace({...a.location,search:s.toString()})}),[r,a])]}function x(e){const{defaultValue:s,queryString:n=!1,groupId:a}=e,r=m(e),[i,o]=(0,t.useState)((()=>function(e){let{defaultValue:s,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(s){if(!d({value:s,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${s}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return s}const t=n.find((e=>e.default))??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:s,tabValues:r}))),[c,h]=p({queryString:n,groupId:a}),[x,j]=function(e){let{groupId:s}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(s),[a,r]=(0,u.Dv)(n);return[a,(0,t.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:a}),g=(()=>{const e=c??x;return d({value:e,tabValues:r})?e:null})();(0,l.A)((()=>{g&&o(g)}),[g]);return{selectedValue:i,selectValue:(0,t.useCallback)((e=>{if(!d({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);o(e),h(e),j(e)}),[h,j,r]),tabValues:r}}var j=n(92303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=n(74848);function b(e){let{className:s,block:n,selectedValue:t,selectValue:i,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.a_)(),u=e=>{const s=e.currentTarget,n=o.indexOf(s),a=l[n].value;a!==t&&(c(s),i(a))},h=e=>{let s=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const n=o.indexOf(e.currentTarget)+1;s=o[n]??o[0];break}case"ArrowLeft":{const n=o.indexOf(e.currentTarget)-1;s=o[n]??o[o.length-1];break}}s?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":n},s),children:l.map((e=>{let{value:s,label:n,attributes:r}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:t===s?0:-1,"aria-selected":t===s,ref:e=>o.push(e),onKeyDown:h,onClick:u,...r,className:(0,a.A)("tabs__item",g.tabItem,r?.className,{"tabs__item--active":t===s}),children:n??s},s)}))})}function v(e){let{lazy:s,children:n,selectedValue:r}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(s){const e=i.find((e=>e.props.value===r));return e?(0,t.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:i.map(((e,s)=>(0,t.cloneElement)(e,{key:s,hidden:e.props.value!==r})))})}function N(e){const s=x(e);return(0,f.jsxs)("div",{className:(0,a.A)("tabs-container",g.tabList),children:[(0,f.jsx)(b,{...s,...e}),(0,f.jsx)(v,{...s,...e})]})}function y(e){const s=(0,j.A)();return(0,f.jsx)(N,{...e,children:h(e.children)},String(s))}},28453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>l});var t=n(96540);const a={},r=t.createContext(a);function i(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);