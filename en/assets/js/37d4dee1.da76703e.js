"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[9066],{23189:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"binary-tree/recursion/lowest-common-ancestor-of-a-binary-tree","title":"Lowest Common Ancestor of a Binary Tree","description":"\u63cf\u8ff0","source":"@site/docs/binary-tree/recursion/lowest-common-ancestor-of-a-binary-tree.md","sourceDirName":"binary-tree/recursion","slug":"/binary-tree/recursion/lowest-common-ancestor-of-a-binary-tree","permalink":"/en/binary-tree/recursion/lowest-common-ancestor-of-a-binary-tree","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Lowest Common Ancestor of a Binary Tree"},"sidebar":"docs","previous":{"title":"Sum Root to Leaf Numbers","permalink":"/en/binary-tree/recursion/sum-root-to-leaf-numbers"},"next":{"title":"Lowest Common Ancestor of a Binary Tree II","permalink":"/en/binary-tree/recursion/lowest-common-ancestor-of-a-binary-tree-ii"}}');var t=o(74848),i=o(28453);const s={title:"Lowest Common Ancestor of a Binary Tree"},c=void 0,l={},a=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",level:3}];function d(e){const n={a:"a",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h3,{id:"\u63cf\u8ff0",children:"\u63cf\u8ff0"}),"\n",(0,t.jsx)(n.p,{children:"Given a binary tree, find the lowest common ancestor (LCA) of two given nodes in the tree."}),"\n",(0,t.jsxs)(n.p,{children:["According to ",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Lowest_common_ancestor",children:"the definition of LCA on Wikipedia"}),": \u201cThe lowest common ancestor is defined between two nodes v and w as the lowest node in T that has both v and w as descendants (where we allow ",(0,t.jsx)(n.strong,{children:"a node to be a descendant of itself"}),").\u201d"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"        _______3______\n       /              \\\n    ___5__          ___1__\n   /      \\        /      \\\n   6      _2       0       8\n         /  \\\n         7   4\n"})}),"\n",(0,t.jsx)(n.p,{children:"For example, the lowest common ancestor (LCA) of nodes 5 and 1 is 3. Another example is LCA of nodes 5 and 4 is 5, since a node can be a descendant of itself according to the LCA definition."}),"\n",(0,t.jsx)(n.h3,{id:"\u5206\u6790",children:"\u5206\u6790"}),"\n",(0,t.jsxs)(n.p,{children:["\u7528\u81ea\u5e95\u5411\u4e0a(bottom-up)\u7684\u601d\u8def\uff0c\u5148\u770b\u770b\u662f\u5426\u80fd\u5728",(0,t.jsx)(n.code,{children:"root"}),"\u7684\u5de6\u5b50\u6811\u4e2d\u627e\u5230",(0,t.jsx)(n.code,{children:"p"}),"\u6216",(0,t.jsx)(n.code,{children:"q"}),"\uff0c\u518d\u770b\u770b\u80fd\u5426\u5728\u53f3\u5b50\u6811\u4e2d\u627e\u5230\uff0c"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u5982\u679c\u4e24\u8fb9\u90fd\u80fd\u627e\u5230\uff0c\u8bf4\u660e\u5f53\u524d\u8282\u70b9\u5c31\u662f\u6700\u8fd1\u516c\u5171\u7956\u5148"}),"\n",(0,t.jsxs)(n.li,{children:["\u5982\u679c\u5de6\u8fb9\u6ca1\u627e\u5230\uff0c\u5219\u8bf4\u660e",(0,t.jsx)(n.code,{children:"p"}),"\u548c",(0,t.jsx)(n.code,{children:"q"}),"\u90fd\u5728\u53f3\u5b50\u6811"]}),"\n",(0,t.jsxs)(n.li,{children:["\u5982\u679c\u53f3\u8fb9\u6ca1\u627e\u5230\uff0c\u5219\u8bf4\u660e",(0,t.jsx)(n.code,{children:"p"}),"\u548c",(0,t.jsx)(n.code,{children:"q"}),"\u90fd\u5728\u5de6\u5b50\u6811"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"\u4ee3\u7801",children:"\u4ee3\u7801"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"// Lowest Common Ancestor of a Binary Tree\n// Time complexity: O(n), Space complexity: O(h)\npublic class Solution {\n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n        // if root is null or found p or q\n        if (root == null || root == p || root == q) return root;\n        // find p or q in the left subtree\n        final TreeNode left = lowestCommonAncestor(root.left, p, q);\n        // find p or q in the right subtree\n        final TreeNode right = lowestCommonAncestor(root.right, p, q);\n        if (left != null && right != null) return root;\n        else return left == null ? right : left;\n    }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"\u76f8\u5173\u9898\u76ee",children:"\u76f8\u5173\u9898\u76ee"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/en/binary-tree/bst/lca-of-bst",children:"LCA of BST"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/en/binary-tree/recursion/lowest-common-ancestor-of-a-binary-tree-ii",children:"Lowest Common Ancestor of a Binary Tree II"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/en/binary-tree/recursion/lowest-common-ancestor-of-a-binary-tree-iii",children:"Lowest Common Ancestor of a Binary Tree III"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>c});var r=o(96540);const t={},i=r.createContext(t);function s(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);