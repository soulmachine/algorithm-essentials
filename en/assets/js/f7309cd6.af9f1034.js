"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[8801],{64476:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>h,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"dp/dungeon-game","title":"Dungeon Game","description":"The demons had captured the princess (P) and imprisoned her in the bottom-right corner of a dungeon. The dungeon consists of M x N rooms laid out in a 2D grid. Our valiant knight (K) was initially positioned in the top-left room and must fight his way through the dungeon to rescue the princess.","source":"@site/docs/dp/dungeon-game.md","sourceDirName":"dp","slug":"/dp/dungeon-game","permalink":"/en/dp/dungeon-game","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Dungeon Game"},"sidebar":"docs","previous":{"title":"Distinct Subsequences","permalink":"/en/dp/distinct-subsequences"},"next":{"title":"House Robber","permalink":"/en/dp/house-robber"}}');var o=t(74848),s=t(28453);const r={title:"Dungeon Game"},h=void 0,a={},d=[{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3}];function l(n){const e={code:"code",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(e.p,{children:["The demons had captured the princess (",(0,o.jsx)(e.strong,{children:"P"}),") and imprisoned her in the bottom-right corner of a dungeon. The dungeon consists of M x N rooms laid out in a 2D grid. Our valiant knight (",(0,o.jsx)(e.strong,{children:"K"}),") was initially positioned in the top-left room and must fight his way through the dungeon to rescue the princess."]}),"\n",(0,o.jsx)(e.p,{children:"The knight has an initial health point represented by a positive integer. If at any point his health point drops to 0 or below, he dies immediately."}),"\n",(0,o.jsx)(e.p,{children:"Some of the rooms are guarded by demons, so the knight loses health (negative integers) upon entering these rooms; other rooms are either empty (0's) or contain magic orbs that increase the knight's health (positive integers)."}),"\n",(0,o.jsx)(e.p,{children:"In order to reach the princess as quickly as possible, the knight decides to move only rightward or downward in each step."}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"Write a function to determine the knight's minimum initial health so that he is able to rescue the princess."})}),"\n",(0,o.jsxs)(e.p,{children:["For example, given the dungeon below, the initial health of the knight must be at least 7 if he follows the optimal path ",(0,o.jsx)(e.code,{children:"RIGHT-> RIGHT -> DOWN -> DOWN"}),"."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"+--------+----+--------+\n| -2 (K) | -3 |    3   |\n+--------+----+--------+\n| -5     | -10|    1   |\n+--------+----+--------+\n| 10     | 30 | -5 (P) |\n+--------+----+--------+\n"})}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"Notes:"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"The knight's health has no upper bound."}),"\n",(0,o.jsx)(e.li,{children:"Any room can contain threats or power-ups, even the first room the knight enters and the bottom-right room where the princess is imprisoned."}),"\n"]}),"\n",(0,o.jsx)(e.h3,{id:"\u5206\u6790",children:"\u5206\u6790"}),"\n",(0,o.jsx)(e.p,{children:"\u8fd9\u662f\u4e00\u4e2a\u591a\u9636\u6bb5\u4f18\u5316\u95ee\u9898\uff0c\u6709\u5e7f\u641c\uff0c\u8d2a\u5fc3\uff0c\u52a8\u89c4\u3002\u8fd9\u9898\u663e\u7136\u8d2a\u5fc3\u4e0d\u884c\uff0c\u4e8e\u662f\u8303\u56f4\u7f29\u5c0f\u5230\u5e7f\u641c\u548c\u52a8\u89c4\u3002\u672c\u9898\u6c42\u6700\u5c0f\u5065\u5eb7\u70b9\u6570\uff0c\u8ddf\u8def\u5f84\u957f\u5ea6\u65e0\u5173\uff0c\u56e0\u6b64\u5e7f\u641c\u4e0d\u9002\u5408\u3002\u6700\u540e\u53ea\u5269\u4e0b\u4e86\u52a8\u89c4\u8fd9\u4e2a\u65b9\u5411\u3002"}),"\n",(0,o.jsxs)(e.p,{children:["\u5148\u5b9a\u4e49\u72b6\u6001\uff0c",(0,o.jsx)(e.code,{children:"f[i][j]"}),"\u8868\u793a\u8fdb\u5165",(0,o.jsx)(e.code,{children:"(i,j)"}),"\u8fd9\u4e2a\u683c\u5b50\u524d\u6240\u9700\u8981\u7684\u6700\u5c0f\u5065\u5eb7\u70b9\u6570\u3002"]}),"\n",(0,o.jsxs)(e.p,{children:["\u518d\u8003\u8651\u72b6\u6001\u7684\u521d\u59cb\u503c\uff0c\u6211\u4eec\u53d1\u73b0\u53f3\u4e0b\u89d2\u90a3\u4e2a\u5750\u6807\u624d\u662f\u521d\u59cb\u503c\uff0c\u8d77\u70b9",(0,o.jsx)(e.code,{children:"f[0][0]"}),"\u53cd\u800c\u4e0d\u77e5\u9053\uff0c\u4e8e\u662f\u5927\u81f4\u53ef\u4ee5\u77e5\u9053\uff0c\u8fd9\u9898\u662f\u4ece\u53f3\u4e0b\u89d2\u5411\u5de6\u4e0a\u89d2\u6765\u586b\u8868\u3002\u53f3\u4e0b\u89d2\u683c\u5b50\uff0c\u5982\u679c\u8be5\u683c\u5b50\u7684\u503c\u4e3a\u8d1f\u6570\uff0c\u90a3\u4e48\u8fdb\u5165\u8fd9\u4e2a\u683c\u5b50\u524d\u9a91\u58eb\u9700\u8981\u7684\u5065\u5eb7\u70b9\u6570\u662f",(0,o.jsx)(e.code,{children:"-dungeon[i][j]+1"}),"\uff0c\u5373\u521d\u59cb\u503c",(0,o.jsx)(e.code,{children:"f[i][j]=-dungeon[i][j]+1"}),"\uff0c\u5982\u679c\u683c\u5b50\u7684\u503c\u662f\u975e\u8d1f\u6570\uff0c\u90a3\u4e48\u521d\u59cb\u503c",(0,o.jsx)(e.code,{children:"f[i][j]=1"}),"\u3002"]}),"\n",(0,o.jsx)(e.p,{children:"\u63a5\u4e0b\u6765\u5bfb\u627e\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u3002\u4ece\u521d\u59cb\u503c\u6211\u4eec\u53ef\u4ee5\u63a8\u6d4b\u51fa\u72b6\u6001\u8f6c\u79fb\u662f\u4ece\u53f3\u4e0b\u89d2\u53cd\u5411\u7684\uff0c\u53ef\u4ee5\u5f97\u5230\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b\uff1a"}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.code,{children:"f[i][j]=max(1, -dungeon[i][j]+min(f[i+1][j],f[i][j+1])"})}),"\n",(0,o.jsx)(e.h3,{id:"\u4ee3\u7801",children:"\u4ee3\u7801"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-java",children:"// Dungeon Game\n// Time Complexity: O(mxn), Space Complexity: O(mxn)\npublic class Solution {\n    public int calculateMinimumHP(int[][] dungeon) {\n        final int m = dungeon.length;\n        final int n = dungeon[0].length;\n        if (m == 0 || n == 0) return 0;\n\n        final int[][] f = new int[m][n];\n        f[m-1][n-1] = Math.max(1, -dungeon[m-1][n-1]+1);\n\n        for (int i = m - 2; i >= 0; --i) {\n            f[i][n-1] = Math.max(1, -dungeon[i][n-1] + f[i+1][n-1]);\n        }\n        for (int j = n - 2; j >= 0; --j) {\n            f[m-1][j] = Math.max(1, -dungeon[m-1][j] + f[m-1][j+1]);\n        }\n\n        for (int i = m - 2; i >= 0; --i) {\n            for (int j = n - 2; j >= 0; --j) {\n                f[i][j] = Math.max(1, -dungeon[i][j] + Math.min(f[i+1][j], f[i][j+1]));\n            }\n        }\n        return f[0][0];\n    }\n}\n"})})]})}function c(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(l,{...n})}):l(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>r,x:()=>h});var i=t(96540);const o={},s=i.createContext(o);function r(n){const e=i.useContext(s);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function h(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:r(n.components),i.createElement(s.Provider,{value:e},n.children)}}}]);