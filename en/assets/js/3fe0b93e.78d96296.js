"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[4124],{45233:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>u,contentTitle:()=>o,default:()=>d,frontMatter:()=>c,metadata:()=>a,toc:()=>p});const a=JSON.parse('{"id":"stack-and-queue/stack/basic-calculator-ii","title":"Basic Calculator II","description":"\u63cf\u8ff0","source":"@site/docs/stack-and-queue/stack/basic-calculator-ii.md","sourceDirName":"stack-and-queue/stack","slug":"/stack-and-queue/stack/basic-calculator-ii","permalink":"/en/stack-and-queue/stack/basic-calculator-ii","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Basic Calculator II"},"sidebar":"docs","previous":{"title":"Basic Calculator","permalink":"/en/stack-and-queue/stack/basic-calculator"},"next":{"title":"Basic Calculator III","permalink":"/en/stack-and-queue/stack/basic-calculator-iii"}}');var r=t(74848),l=t(28453),s=t(11470),i=t(19365);const c={title:"Basic Calculator II"},o=void 0,u={},p=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3},{value:"\u6808",id:"\u6808",level:4},{value:"\u4f18\u5316\u5230\u5e38\u91cf\u7a7a\u95f4",id:"\u4f18\u5316\u5230\u5e38\u91cf\u7a7a\u95f4",level:4}];function h(n){const e={a:"a",code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h3,{id:"\u63cf\u8ff0",children:"\u63cf\u8ff0"}),"\n",(0,r.jsx)(e.p,{children:"TODO"}),"\n",(0,r.jsx)(e.h3,{id:"\u5206\u6790",children:"\u5206\u6790"}),"\n",(0,r.jsx)(e.p,{children:"TODO"}),"\n",(0,r.jsx)(e.h3,{id:"\u4ee3\u7801",children:"\u4ee3\u7801"}),"\n","\n",(0,r.jsx)(e.h4,{id:"\u6808",children:"\u6808"}),"\n",(0,r.jsxs)(s.A,{defaultValue:"python",values:[{label:"Python",value:"python"},{label:"Java",value:"java"},{label:"C++",value:"cpp"}],children:[(0,r.jsx)(i.A,{value:"java",children:(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:"// Basic Calculator II\n// Time complexity: O(n)\n// Space complexity: O(n)\nclass Solution {\n    public int calculate(String s) {\n        final int N = s.length();\n        Stack<Integer> stk = new Stack<>();\n        int n = 0; // current number\n        char op = '+'; // current operation\n        for (int i = 0; i < N; i++) {\n            char ch = s.charAt(i); // current char\n            if (Character.isDigit(ch)) {\n                n = (n * 10) + (ch - '0');\n            }\n            if (isOp(ch) || i == N - 1) {\n                if (op == '-') {\n                    stk.push(-n);\n                } else if (op == '+') {\n                    stk.push(n);\n                } else if (op == '*') {\n                    int top = stk.pop();\n                    stk.push(top * n);\n                } else if (op == '/') {\n                    int top = stk.pop();\n                    stk.push(top / n);\n                }\n                op = ch;\n                n = 0;\n            }\n        }\n        int result = 0;\n        while (!stk.empty()) {\n            result += stk.pop();\n        }\n        return result;\n    }\n    \n    private boolean isOp(char ch) {\n        return ch == '+' || ch == '-' || ch == '*' || ch == '/';\n    }\n}\n"})})}),(0,r.jsx)(i.A,{value:"cpp",children:(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-cpp",children:"// Basic Calculator II\n// Time complexity: O(n)\n// Space complexity: O(n)\nclass Solution {\npublic:\n    int calculate(string s) {\n        const int N = s.length();\n        stack<int> stk;\n        int n = 0; // current number\n        char op = '+'; // current operation\n        for (int i = 0; i < N; i++) {\n            char ch = s[i]; // current char\n            if (isdigit(ch)) {\n                n = (n * 10) + (ch - '0');\n            } else if (is_op(ch) || i == N - 1) {\n                if (op == '-') {\n                    stk.push(-n);\n                } else if (op == '+') {\n                    stk.push(n);\n                } else if (op == '*') {\n                    int top = stk.top(); stk.pop();\n                    stk.push(top * n);\n                } else if (op == '/') {\n                    int top = stk.top(); stk.pop();\n                    stk.push(top / n);\n                }\n                op = ch;\n                n = 0;\n            }\n        }\n        int result = 0;\n        while (!stk.empty()) {\n            result += stk.top();\n            stk.pop();\n        }\n        return result;\n    }\nprivate:\n    bool is_op(char ch) {\n        return ch == '+' || ch == '-' || ch == '*' || ch == '/';\n    }\n};\n"})})}),(0,r.jsx)(i.A,{value:"python",children:(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"# Basic Calculator II\n# Time complexity: O(n)\n# Space complexity: O(n)\nclass Solution:\n    def calculate(self, s: str) -> int:\n        N = len(s)\n        stk = []\n        n = 0  # current number\n        op = '+'  # current operation\n        for i in range(N):\n            ch = s[i]  # current char\n            if ch.isdigit():\n                n = (n * 10) + (ord(ch) - ord('0'))\n            if self.isOp(ch) or i == N - 1:\n                if op == '-':\n                    stk.append(-n)\n                elif op == '+':\n                    stk.append(n)\n                elif op == '*':\n                    top = stk.pop()\n                    stk.append(top * n)\n                elif op == '/':\n                    top = stk.pop()\n                    stk.append(int(top / n))\n                op = ch\n                n = 0\n        result = 0\n        while stk:\n            result += stk.pop()\n        return result\n\n    def isOp(self, ch: str) -> bool:\n        return ch in {'+', '-', '*', '/'}\n"})})})]}),"\n",(0,r.jsxs)(e.p,{children:["\u4e0a\u9762\u7684\u4ee3\u7801\u91cc\u6709\u4e2a\u5c0f\u6280\u5de7\uff0c",(0,r.jsx)(e.code,{children:"n"})," \u548c ",(0,r.jsx)(e.code,{children:"op"}),"\u521d\u59cb\u5316\u4e3a 0 \u548c ",(0,r.jsx)(e.code,{children:"+"}),"\uff0c\u76f8\u5f53\u4e8e\u5728\u8868\u8fbe\u5f0f\u524d\u9762\u63d2\u5165\u4e86 ",(0,r.jsx)(e.code,{children:"0+"}),"\uff0c\u5e2e\u52a9\u7b80\u5316\u4ee3\u7801\u3002"]}),"\n",(0,r.jsx)(e.h4,{id:"\u4f18\u5316\u5230\u5e38\u91cf\u7a7a\u95f4",children:"\u4f18\u5316\u5230\u5e38\u91cf\u7a7a\u95f4"}),"\n",(0,r.jsx)(e.p,{children:"\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u53ef\u4ee5\u7a0d\u4f5c\u4f18\u5316\uff0c\u628a\u6808\u6d88\u9664\u6389\u3002"}),"\n",(0,r.jsxs)(s.A,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],children:[(0,r.jsx)(i.A,{value:"java",children:(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:"// Time complexity: O(n)\n// Space complexity: O(1)\nclass Solution {\n    public int calculate(String s) {\n        final int N = s.length();\n        int n = 0; // current number\n        int last = 0; // last number\n        int result = 0;\n        char op = '+'; // current operation\n        for (int i = 0; i < N; i++) {\n            char ch = s.charAt(i); // current char\n            if (Character.isDigit(ch)) {\n                n = (n * 10) + (ch - '0');\n            } else if (isOp(ch) || i == N - 1) {\n                if (op == '+' || op == '-') {\n                    result += last;\n                    last = op == '+' ? n : -n;\n                    stk.push(-n);\n                } else if (op == '*') {\n                    last *= n;\n                } else if (op == '/') {\n                    last /= n;\n                }\n                op = ch;\n                n = 0;\n            }\n        }\n        result += last;\n        return result;\n    }\n    \n    private boolean isOp(char ch) {\n        return ch == '+' || ch == '-' || ch == '*' || ch == '/';\n    }\n}\n"})})}),(0,r.jsx)(i.A,{value:"cpp",children:(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-cpp",children:"// Basic Calculator II\n// Time complexity: O(n)\n// Space complexity: O(1)\nclass Solution {\npublic:\n    int calculate(string s) {\n        const int N = s.length();\n        int n = 0; // current number\n        int last = 0; // last number\n        int result = 0;\n        char op = '+'; // current operation\n        for (int i = 0; i < N; i++) {\n            char ch = s[i]; // current char\n            if (isdigit(ch)) {\n                n = (n * 10) + (ch - '0');\n            } else if (is_op(ch) || i == N - 1) {\n                if (op == '+' || op == '-') {\n                    result += last;\n                    last = op == '+' ? n : -n;\n                    stk.push(-n);\n                } else if (op == '*') {\n                    last *= n;\n                } else if (op == '/') {\n                    last /= n;\n                }\n                op = ch;\n                n = 0;\n            }\n        }\n\n        result += last;\n        return result;\n    }\nprivate:\n    bool is_op(char ch) {\n        return ch == '+' || ch == '-' || ch == '*' || ch == '/';\n    }\n};\n"})})}),(0,r.jsx)(i.A,{value:"python",children:(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"# Time complexity: O(n)\n# Space complexity: O(1)\nclass Solution:\n    def calculate(self, s: str) -> int:\n        N = len(s)\n        n = 0  # current number\n        last = 0  # last number\n        result = 0\n        op = '+'  # current operation\n        for i in range(N):\n            ch = s[i]  # current char\n            if ch.isdigit():\n                n = (n * 10) + (ord(ch) - ord('0'))\n            elif self.isOp(ch) or i == N - 1:\n                if op == '+' or op == '-':\n                    result += last\n                    last = n if op == '+' else -n\n                elif op == '*':\n                    last *= n\n                elif op == '/':\n                    last //= n\n                op = ch\n                n = 0\n        result += last\n        return result\n\n    def isOp(self, ch: str) -> bool:\n        return ch in {'+', '-', '*', '/'}\n"})})})]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"/en/stack-and-queue/stack/basic-calculator",children:"Basic Calculator"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"/en/stack-and-queue/stack/basic-calculator-iii",children:"Basic Calculator III"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"/en/stack-and-queue/stack/build-binary-expression-tree-from-infix-expression",children:"Build Binary Expression Tree From Infix Expression"})}),"\n"]})]})}function d(n={}){const{wrapper:e}={...(0,l.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(h,{...n})}):h(n)}},19365:(n,e,t)=>{t.d(e,{A:()=>s});t(96540);var a=t(34164);const r={tabItem:"tabItem_Ymn6"};var l=t(74848);function s(n){let{children:e,hidden:t,className:s}=n;return(0,l.jsx)("div",{role:"tabpanel",className:(0,a.A)(r.tabItem,s),hidden:t,children:e})}},11470:(n,e,t)=>{t.d(e,{A:()=>y});var a=t(96540),r=t(34164),l=t(23104),s=t(56347),i=t(205),c=t(57485),o=t(31682),u=t(70679);function p(n){return a.Children.toArray(n).filter((n=>"\n"!==n)).map((n=>{if(!n||(0,a.isValidElement)(n)&&function(n){const{props:e}=n;return!!e&&"object"==typeof e&&"value"in e}(n))return n;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof n.type?n.type:n.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(n){const{values:e,children:t}=n;return(0,a.useMemo)((()=>{const n=e??function(n){return p(n).map((n=>{let{props:{value:e,label:t,attributes:a,default:r}}=n;return{value:e,label:t,attributes:a,default:r}}))}(t);return function(n){const e=(0,o.XI)(n,((n,e)=>n.value===e.value));if(e.length>0)throw new Error(`Docusaurus error: Duplicate values "${e.map((n=>n.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(n),n}),[e,t])}function d(n){let{value:e,tabValues:t}=n;return t.some((n=>n.value===e))}function f(n){let{queryString:e=!1,groupId:t}=n;const r=(0,s.W6)(),l=function(n){let{queryString:e=!1,groupId:t}=n;if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,c.aZ)(l),(0,a.useCallback)((n=>{if(!l)return;const e=new URLSearchParams(r.location.search);e.set(l,n),r.replace({...r.location,search:e.toString()})}),[l,r])]}function m(n){const{defaultValue:e,queryString:t=!1,groupId:r}=n,l=h(n),[s,c]=(0,a.useState)((()=>function(n){let{defaultValue:e,tabValues:t}=n;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!d({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map((n=>n.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const a=t.find((n=>n.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:e,tabValues:l}))),[o,p]=f({queryString:t,groupId:r}),[m,b]=function(n){let{groupId:e}=n;const t=function(n){return n?`docusaurus.tab.${n}`:null}(e),[r,l]=(0,u.Dv)(t);return[r,(0,a.useCallback)((n=>{t&&l.set(n)}),[t,l])]}({groupId:r}),v=(()=>{const n=o??m;return d({value:n,tabValues:l})?n:null})();(0,i.A)((()=>{v&&c(v)}),[v]);return{selectedValue:s,selectValue:(0,a.useCallback)((n=>{if(!d({value:n,tabValues:l}))throw new Error(`Can't select invalid tab value=${n}`);c(n),p(n),b(n)}),[p,b,l]),tabValues:l}}var b=t(92303);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=t(74848);function k(n){let{className:e,block:t,selectedValue:a,selectValue:s,tabValues:i}=n;const c=[],{blockElementScrollPositionUntilNextRender:o}=(0,l.a_)(),u=n=>{const e=n.currentTarget,t=c.indexOf(e),r=i[t].value;r!==a&&(o(e),s(r))},p=n=>{let e=null;switch(n.key){case"Enter":u(n);break;case"ArrowRight":{const t=c.indexOf(n.currentTarget)+1;e=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(n.currentTarget)-1;e=c[t]??c[c.length-1];break}}e?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},e),children:i.map((n=>{let{value:e,label:t,attributes:l}=n;return(0,x.jsx)("li",{role:"tab",tabIndex:a===e?0:-1,"aria-selected":a===e,ref:n=>c.push(n),onKeyDown:p,onClick:u,...l,className:(0,r.A)("tabs__item",v.tabItem,l?.className,{"tabs__item--active":a===e}),children:t??e},e)}))})}function g(n){let{lazy:e,children:t,selectedValue:l}=n;const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const n=s.find((n=>n.props.value===l));return n?(0,a.cloneElement)(n,{className:(0,r.A)("margin-top--md",n.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:s.map(((n,e)=>(0,a.cloneElement)(n,{key:e,hidden:n.props.value!==l})))})}function j(n){const e=m(n);return(0,x.jsxs)("div",{className:(0,r.A)("tabs-container",v.tabList),children:[(0,x.jsx)(k,{...e,...n}),(0,x.jsx)(g,{...e,...n})]})}function y(n){const e=(0,b.A)();return(0,x.jsx)(j,{...n,children:p(n.children)},String(e))}},28453:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>i});var a=t(96540);const r={},l=a.createContext(r);function s(n){const e=a.useContext(l);return a.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:s(n.components),a.createElement(l.Provider,{value:e},n.children)}}}]);