"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[821],{84913:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>u,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"dfs/n-queens-ii","title":"N-Queens II","description":"\u63cf\u8ff0","source":"@site/docs/dfs/n-queens-ii.md","sourceDirName":"dfs","slug":"/dfs/n-queens-ii","permalink":"/en/dfs/n-queens-ii","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"N-Queens II"},"sidebar":"docs","previous":{"title":"N-Queens","permalink":"/en/dfs/n-queens"},"next":{"title":"Restore IP Addresses","permalink":"/en/dfs/restore-ip-addresses"}}');var a=t(74848),o=t(28453),i=t(11470),l=t(19365);const s={title:"N-Queens II"},u=void 0,c={},d=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801 1",id:"\u4ee3\u7801-1",level:3},{value:"\u4ee3\u7801 2",id:"\u4ee3\u7801-2",level:3},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",level:3}];function f(n){const e={a:"a",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h3,{id:"\u63cf\u8ff0",children:"\u63cf\u8ff0"}),"\n",(0,a.jsx)(e.p,{children:"Follow up for N-Queens problem."}),"\n",(0,a.jsx)(e.p,{children:"Now, instead outputting board configurations, return the total number of distinct solutions."}),"\n",(0,a.jsx)(e.h3,{id:"\u5206\u6790",children:"\u5206\u6790"}),"\n",(0,a.jsx)(e.p,{children:"\u53ea\u9700\u8981\u8f93\u51fa\u89e3\u7684\u4e2a\u6570\uff0c\u4e0d\u9700\u8981\u8f93\u51fa\u6240\u6709\u89e3\uff0c\u4ee3\u7801\u8981\u6bd4\u4e0a\u4e00\u9898\u7b80\u5316\u5f88\u591a\u3002\u8bbe\u4e00\u4e2a\u5168\u5c40\u8ba1\u6570\u5668\uff0c\u6bcf\u627e\u5230\u4e00\u4e2a\u89e3\u5c31\u589e 1\u3002"}),"\n",(0,a.jsx)(e.h3,{id:"\u4ee3\u7801-1",children:"\u4ee3\u7801 1"}),"\n","\n",(0,a.jsxs)(i.A,{defaultValue:"python",values:[{label:"Python",value:"python"},{label:"Java",value:"java"},{label:"C++",value:"cpp"}],children:[(0,a.jsx)(l.A,{value:"java",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:"// N-Queens II\n// \u6df1\u641c+\u526a\u679d\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n!*n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\npublic class Solution {\n    public int totalNQueens(int n) {\n        this.count = 0;\n\n        int[] C = new int[n]; // C[i]\u8868\u793a\u7b2ci\u884c\u7687\u540e\u6240\u5728\u7684\u5217\u7f16\u53f7\n        dfs(C, 0);\n        return this.count;\n    }\n\n    void dfs(int[] C, int row) {\n        final int n = C.length;\n        if (row == n) { // \u7ec8\u6b62\u6761\u4ef6\uff0c\u4e5f\u662f\u6536\u655b\u6761\u4ef6\uff0c\u610f\u5473\u7740\u627e\u5230\u4e86\u4e00\u4e2a\u53ef\u884c\u89e3\n            ++this.count;\n            return;\n        }\n\n        for (int j = 0; j < n; ++j) {  // \u6269\u5c55\u72b6\u6001\uff0c\u4e00\u5217\u4e00\u5217\u7684\u8bd5\n            final boolean ok = isValid(C, row, j);\n            if (!ok) continue;  // \u526a\u679d\uff1a\u5982\u679c\u5408\u6cd5\uff0c\u7ee7\u7eed\u9012\u5f52\n            // \u6267\u884c\u6269\u5c55\u52a8\u4f5c\n            C[row] = j;\n            dfs(C, row + 1);\n            // \u64a4\u9500\u52a8\u4f5c\n            // C[row] = -1;\n        }\n    }\n    /**\n     * \u80fd\u5426\u5728 (row, col) \u4f4d\u7f6e\u653e\u4e00\u4e2a\u7687\u540e.\n     *\n     * @param C \u68cb\u5c40\n     * @param row \u5f53\u524d\u6b63\u5728\u5904\u7406\u7684\u884c\uff0c\u524d\u9762\u7684\u884c\u90fd\u5df2\u7ecf\u653e\u4e86\u7687\u540e\u4e86\n     * @param col \u5f53\u524d\u5217\n     * @return \u80fd\u5426\u653e\u4e00\u4e2a\u7687\u540e\n     */\n    private static boolean isValid(int[] C, int row, int col) {\n        for (int i = 0; i < row; ++i) {\n            // \u5728\u540c\u4e00\u5217\n            if (C[i] == col) return false;\n            // \u5728\u540c\u4e00\u5bf9\u89d2\u7ebf\u4e0a\n            if (Math.abs(i - row) == Math.abs(C[i] - col)) return false;\n        }\n        return true;\n    }\n    private int count; // \u89e3\u7684\u4e2a\u6570\n}\n"})})}),(0,a.jsx)(l.A,{value:"cpp",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-cpp",children:"// N-Queens II\n// \u6df1\u641c+\u526a\u679d\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n!*n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\nclass Solution {\npublic:\n    int totalNQueens(int n) {\n        this->count = 0;\n\n        vector<int> C(n, 0);  // C[i]\u8868\u793a\u7b2ci\u884c\u7687\u540e\u6240\u5728\u7684\u5217\u7f16\u53f7\n        dfs(C, 0);\n        return this->count;\n    }\nprivate:\n    int count; // \u89e3\u7684\u4e2a\u6570\n\n    void dfs(vector<int> &C, int row) {\n        const int N = C.size();\n        if (row == N) { // \u7ec8\u6b62\u6761\u4ef6\uff0c\u4e5f\u662f\u6536\u655b\u6761\u4ef6\uff0c\u610f\u5473\u7740\u627e\u5230\u4e86\u4e00\u4e2a\u53ef\u884c\u89e3\n            ++this->count;\n            return;\n        }\n\n        for (int j = 0; j < N; ++j) {  // \u6269\u5c55\u72b6\u6001\uff0c\u4e00\u5217\u4e00\u5217\u7684\u8bd5\n            const bool ok = isValid(C, row, j);\n            if (!ok) continue;  // \u526a\u679d\uff1a\u5982\u679c\u5408\u6cd5\uff0c\u7ee7\u7eed\u9012\u5f52\n            // \u6267\u884c\u6269\u5c55\u52a8\u4f5c\n            C[row] = j;\n            dfs(C, row + 1);\n            // \u64a4\u9500\u52a8\u4f5c\n            // C[row] = -1;\n        }\n    }\n    /**\n     * \u80fd\u5426\u5728 (row, col) \u4f4d\u7f6e\u653e\u4e00\u4e2a\u7687\u540e.\n     *\n     * @param C \u68cb\u5c40\n     * @param row \u5f53\u524d\u6b63\u5728\u5904\u7406\u7684\u884c\uff0c\u524d\u9762\u7684\u884c\u90fd\u5df2\u7ecf\u653e\u4e86\u7687\u540e\u4e86\n     * @param col \u5f53\u524d\u5217\n     * @return \u80fd\u5426\u653e\u4e00\u4e2a\u7687\u540e\n     */\n    bool isValid(const vector<int> &C, int row, int col) {\n        for (int i = 0; i < row; ++i) {\n            // \u5728\u540c\u4e00\u5217\n            if (C[i] == col) return false;\n            // \u5728\u540c\u4e00\u5bf9\u89d2\u7ebf\u4e0a\n            if (abs(i - row) == abs(C[i] - col)) return false;\n        }\n        return true;\n    }\n};\n"})})}),(0,a.jsx)(l.A,{value:"python",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'# N-Queens II\n# \u6df1\u641c+\u526a\u679d\n# \u65f6\u95f4\u590d\u6742\u5ea6O(n!*n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\nclass Solution:\n    def totalNQueens(self, n: int) -> int:\n        self.count = 0\n\n        C = [0] * n  # C[i]\u8868\u793a\u7b2ci\u884c\u7687\u540e\u6240\u5728\u7684\u5217\u7f16\u53f7\n        self.dfs(C, 0)\n        return self.count\n\n    def dfs(self, C: list, row: int) -> None:\n        n = len(C)\n        if row == n:  # \u7ec8\u6b62\u6761\u4ef6\uff0c\u4e5f\u662f\u6536\u655b\u6761\u4ef6\uff0c\u610f\u5473\u7740\u627e\u5230\u4e86\u4e00\u4e2a\u53ef\u884c\u89e3\n            self.count += 1\n            return\n\n        for j in range(n):  # \u6269\u5c55\u72b6\u6001\uff0c\u4e00\u5217\u4e00\u5217\u7684\u8bd5\n            ok = self.isValid(C, row, j)\n            if not ok:\n                continue  # \u526a\u679d\uff1a\u5982\u679c\u5408\u6cd5\uff0c\u7ee7\u7eed\u9012\u5f52\n            # \u6267\u884c\u6269\u5c55\u52a8\u4f5c\n            C[row] = j\n            self.dfs(C, row + 1)\n            # \u64a4\u9500\u52a8\u4f5c\n            # C[row] = -1\n\n    @staticmethod\n    def isValid(C: list, row: int, col: int) -> bool:\n        """\n        \u80fd\u5426\u5728 (row, col) \u4f4d\u7f6e\u653e\u4e00\u4e2a\u7687\u540e.\n        :param C: \u68cb\u5c40\n        :param row: \u5f53\u524d\u6b63\u5728\u5904\u7406\u7684\u884c\uff0c\u524d\u9762\u7684\u884c\u90fd\u5df2\u7ecf\u653e\u4e86\u7687\u540e\u4e86\n        :param col: \u5f53\u524d\u5217\n        :return: \u80fd\u5426\u653e\u4e00\u4e2a\u7687\u540e\n        """\n        for i in range(row):\n            # \u5728\u540c\u4e00\u5217\n            if C[i] == col:\n                return False\n            # \u5728\u540c\u4e00\u5bf9\u89d2\u7ebf\u4e0a\n            if abs(i - row) == abs(C[i] - col):\n                return False\n        return True\n'})})})]}),"\n",(0,a.jsx)(e.h3,{id:"\u4ee3\u7801-2",children:"\u4ee3\u7801 2"}),"\n",(0,a.jsxs)(i.A,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],children:[(0,a.jsx)(l.A,{value:"java",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:"// N-Queens II\n// \u6df1\u641c+\u526a\u679d\n// \u65f6\u95f4\u590d\u6742\u5ea6 O(n!)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 O(n)\npublic class Solution {\npublic int totalNQueens(int n) {\nthis.count = 0;\nthis.columns = new boolean[n];\nthis.main_diag = new boolean[2 * n - 1];\nthis.anti_diag = new boolean[2 * n - 1];\n\n        int[] C = new int[n]; // C[i]\u8868\u793a\u7b2ci\u884c\u7687\u540e\u6240\u5728\u7684\u5217\u7f16\u53f7\n        dfs(C, 0);\n        return this.count;\n    }\n\n    void dfs(int[] C, int row) {\n        final int N = C.length;\n        if (row == N) { // \u7ec8\u6b62\u6761\u4ef6\uff0c\u4e5f\u662f\u6536\u655b\u6761\u4ef6\uff0c\u610f\u5473\u7740\u627e\u5230\u4e86\u4e00\u4e2a\u53ef\u884c\u89e3\n            ++this.count;\n            return;\n        }\n\n        for (int j = 0; j < N; ++j) {  // \u6269\u5c55\u72b6\u6001\uff0c\u4e00\u5217\u4e00\u5217\u7684\u8bd5\n            final boolean ok = !columns[j] &&\n                    !main_diag[row - j + N - 1] &&\n                    !anti_diag[row + j];\n            if (!ok) continue;  // \u526a\u679d\uff1a\u5982\u679c\u5408\u6cd5\uff0c\u7ee7\u7eed\u9012\u5f52\n            // \u6267\u884c\u6269\u5c55\u52a8\u4f5c\n            C[row] = j;\n            columns[j] = main_diag[row - j + N - 1] =\n                    anti_diag[row + j] = true;\n            dfs(C, row + 1);\n            // \u64a4\u9500\u52a8\u4f5c\n            // C[row] = -1;\n            columns[j] = main_diag[row - j + N - 1] =\n                    anti_diag[row + j] = false;\n        }\n    }\n\n    private int count; // \u89e3\u7684\u4e2a\u6570\n    // \u8fd9\u4e09\u4e2a\u53d8\u91cf\u7528\u4e8e\u526a\u679d\n    private boolean[] columns;   // \u8868\u793a\u5df2\u7ecf\u653e\u7f6e\u7684\u7687\u540e\u5360\u636e\u4e86\u54ea\u4e9b\u5217\n    private boolean[] main_diag; // \u5360\u636e\u4e86\u54ea\u4e9b\u4e3b\u5bf9\u89d2\u7ebf\n    private boolean[] anti_diag; // \u5360\u636e\u4e86\u54ea\u4e9b\u526f\u5bf9\u89d2\u7ebf\n\n    public static void main(String[] args) {\n        Solution s = new Solution();\n        s.totalNQueens(1);\n    }\n\n}\n"})})}),(0,a.jsx)(l.A,{value:"cpp",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-cpp",children:"// N-Queens II\n// \u6df1\u641c+\u526a\u679d\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n!)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\nclass Solution {\npublic:\n    int totalNQueens(int n) {\n        this->count = 0;\n        this->columns = vector<bool>(n, false);\n        this->main_diag = vector<bool>(2 * n - 1, false);\n        this->anti_diag = vector<bool>(2 * n - 1, false);\n\n        vector<int> C(n, 0);  // C[i]\u8868\u793a\u7b2ci\u884c\u7687\u540e\u6240\u5728\u7684\u5217\u7f16\u53f7\n        dfs(C, 0);\n        return this->count;\n    }\nprivate:\n    int count; // \u89e3\u7684\u4e2a\u6570\n    // \u8fd9\u4e09\u4e2a\u53d8\u91cf\u7528\u4e8e\u526a\u679d\n    vector<bool> columns;  // \u8868\u793a\u5df2\u7ecf\u653e\u7f6e\u7684\u7687\u540e\u5360\u636e\u4e86\u54ea\u4e9b\u5217\n    vector<bool> main_diag;  // \u5360\u636e\u4e86\u54ea\u4e9b\u4e3b\u5bf9\u89d2\u7ebf\n    vector<bool> anti_diag;  // \u5360\u636e\u4e86\u54ea\u4e9b\u526f\u5bf9\u89d2\u7ebf\n\n    void dfs(vector<int> &C, int row) {\n        const int N = C.size();\n        if (row == N) { // \u7ec8\u6b62\u6761\u4ef6\uff0c\u4e5f\u662f\u6536\u655b\u6761\u4ef6\uff0c\u610f\u5473\u7740\u627e\u5230\u4e86\u4e00\u4e2a\u53ef\u884c\u89e3\n            ++this->count;\n            return;\n        }\n\n        for (int j = 0; j < N; ++j) {  // \u6269\u5c55\u72b6\u6001\uff0c\u4e00\u5217\u4e00\u5217\u7684\u8bd5\n            const bool ok = !columns[j] &&\n                    !main_diag[row - j + N - 1] &&\n                    !anti_diag[row + j];\n            if (!ok) continue;  // \u526a\u679d\uff1a\u5982\u679c\u5408\u6cd5\uff0c\u7ee7\u7eed\u9012\u5f52\n            // \u6267\u884c\u6269\u5c55\u52a8\u4f5c\n            C[row] = j;\n            columns[j] = main_diag[row - j + N - 1] =\n                    anti_diag[row + j] = true;\n            dfs(C, row + 1);\n            // \u64a4\u9500\u52a8\u4f5c\n            // C[row] = -1;\n            columns[j] = main_diag[row - j + N - 1] =\n                    anti_diag[row + j] = false;\n        }\n    }\n};\n"})})}),(0,a.jsx)(l.A,{value:"python",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'# N-Queens II\n# \u6df1\u641c+\u526a\u679d\n# \u65f6\u95f4\u590d\u6742\u5ea6 O(n!)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 O(n)\nclass Solution:\n    def totalNQueens(self, n: int) -> int:\n        self.count = 0\n        self.columns = [False] * n\n        self.main_diag = [False] * (2 * n - 1)\n        self.anti_diag = [False] * (2 * n - 1)\n\n        C = [0] * n  # C[i]\u8868\u793a\u7b2ci\u884c\u7687\u540e\u6240\u5728\u7684\u5217\u7f16\u53f7\n        self.dfs(C, 0)\n        return self.count\n\n    def dfs(self, C: list, row: int) -> None:\n        N = len(C)\n        if row == N:  # \u7ec8\u6b62\u6761\u4ef6\uff0c\u4e5f\u662f\u6536\u655b\u6761\u4ef6\uff0c\u610f\u5473\u7740\u627e\u5230\u4e86\u4e00\u4e2a\u53ef\u884c\u89e3\n            self.count += 1\n            return\n\n        for j in range(N):  # \u6269\u5c55\u72b6\u6001\uff0c\u4e00\u5217\u4e00\u5217\u7684\u8bd5\n            ok = not self.columns[j] and \\\n                not self.main_diag[row - j + N - 1] and \\\n                not self.anti_diag[row + j]\n            if not ok:  # \u526a\u679d\uff1a\u5982\u679c\u5408\u6cd5\uff0c\u7ee7\u7eed\u9012\u5f52\n                continue\n            # \u6267\u884c\u6269\u5c55\u52a8\u4f5c\n            C[row] = j\n            self.columns[j] = True\n            self.main_diag[row - j + N - 1] = True\n            self.anti_diag[row + j] = True\n            self.dfs(C, row + 1)\n            # \u64a4\u9500\u52a8\u4f5c\n            # C[row] = -1\n            self.columns[j] = False\n            self.main_diag[row - j + N - 1] = False\n            self.anti_diag[row + j] = False\n\nif __name__ == "__main__":\n    s = Solution()\n    s.totalNQueens(1)\n'})})})]}),"\n",(0,a.jsx)(e.h3,{id:"\u76f8\u5173\u9898\u76ee",children:"\u76f8\u5173\u9898\u76ee"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"/en/dfs/n-queens",children:"N-Queens"})}),"\n"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{})})]})}function h(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(f,{...n})}):f(n)}},19365:(n,e,t)=>{t.d(e,{A:()=>i});t(96540);var r=t(34164);const a={tabItem:"tabItem_Ymn6"};var o=t(74848);function i(n){let{children:e,hidden:t,className:i}=n;return(0,o.jsx)("div",{role:"tabpanel",className:(0,r.A)(a.tabItem,i),hidden:t,children:e})}},11470:(n,e,t)=>{t.d(e,{A:()=>N});var r=t(96540),a=t(34164),o=t(23104),i=t(56347),l=t(205),s=t(57485),u=t(31682),c=t(70679);function d(n){return r.Children.toArray(n).filter((n=>"\n"!==n)).map((n=>{if(!n||(0,r.isValidElement)(n)&&function(n){const{props:e}=n;return!!e&&"object"==typeof e&&"value"in e}(n))return n;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof n.type?n.type:n.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function f(n){const{values:e,children:t}=n;return(0,r.useMemo)((()=>{const n=e??function(n){return d(n).map((n=>{let{props:{value:e,label:t,attributes:r,default:a}}=n;return{value:e,label:t,attributes:r,default:a}}))}(t);return function(n){const e=(0,u.XI)(n,((n,e)=>n.value===e.value));if(e.length>0)throw new Error(`Docusaurus error: Duplicate values "${e.map((n=>n.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(n),n}),[e,t])}function h(n){let{value:e,tabValues:t}=n;return t.some((n=>n.value===e))}function p(n){let{queryString:e=!1,groupId:t}=n;const a=(0,i.W6)(),o=function(n){let{queryString:e=!1,groupId:t}=n;if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,s.aZ)(o),(0,r.useCallback)((n=>{if(!o)return;const e=new URLSearchParams(a.location.search);e.set(o,n),a.replace({...a.location,search:e.toString()})}),[o,a])]}function m(n){const{defaultValue:e,queryString:t=!1,groupId:a}=n,o=f(n),[i,s]=(0,r.useState)((()=>function(n){let{defaultValue:e,tabValues:t}=n;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!h({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map((n=>n.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const r=t.find((n=>n.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:e,tabValues:o}))),[u,d]=p({queryString:t,groupId:a}),[m,v]=function(n){let{groupId:e}=n;const t=function(n){return n?`docusaurus.tab.${n}`:null}(e),[a,o]=(0,c.Dv)(t);return[a,(0,r.useCallback)((n=>{t&&o.set(n)}),[t,o])]}({groupId:a}),b=(()=>{const n=u??m;return h({value:n,tabValues:o})?n:null})();(0,l.A)((()=>{b&&s(b)}),[b]);return{selectedValue:i,selectValue:(0,r.useCallback)((n=>{if(!h({value:n,tabValues:o}))throw new Error(`Can't select invalid tab value=${n}`);s(n),d(n),v(n)}),[d,v,o]),tabValues:o}}var v=t(92303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=t(74848);function w(n){let{className:e,block:t,selectedValue:r,selectValue:i,tabValues:l}=n;const s=[],{blockElementScrollPositionUntilNextRender:u}=(0,o.a_)(),c=n=>{const e=n.currentTarget,t=s.indexOf(e),a=l[t].value;a!==r&&(u(e),i(a))},d=n=>{let e=null;switch(n.key){case"Enter":c(n);break;case"ArrowRight":{const t=s.indexOf(n.currentTarget)+1;e=s[t]??s[0];break}case"ArrowLeft":{const t=s.indexOf(n.currentTarget)-1;e=s[t]??s[s.length-1];break}}e?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":t},e),children:l.map((n=>{let{value:e,label:t,attributes:o}=n;return(0,j.jsx)("li",{role:"tab",tabIndex:r===e?0:-1,"aria-selected":r===e,ref:n=>s.push(n),onKeyDown:d,onClick:c,...o,className:(0,a.A)("tabs__item",b.tabItem,o?.className,{"tabs__item--active":r===e}),children:t??e},e)}))})}function g(n){let{lazy:e,children:t,selectedValue:o}=n;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const n=i.find((n=>n.props.value===o));return n?(0,r.cloneElement)(n,{className:(0,a.A)("margin-top--md",n.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:i.map(((n,e)=>(0,r.cloneElement)(n,{key:e,hidden:n.props.value!==o})))})}function C(n){const e=m(n);return(0,j.jsxs)("div",{className:(0,a.A)("tabs-container",b.tabList),children:[(0,j.jsx)(w,{...e,...n}),(0,j.jsx)(g,{...e,...n})]})}function N(n){const e=(0,v.A)();return(0,j.jsx)(C,{...n,children:d(n.children)},String(e))}},28453:(n,e,t)=>{t.d(e,{R:()=>i,x:()=>l});var r=t(96540);const a={},o=r.createContext(a);function i(n){const e=r.useContext(o);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:i(n.components),r.createElement(o.Provider,{value:e},n.children)}}}]);