"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[5993],{76675:(e,n,d)=>{d.r(n),d.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"linked-list/odd-even-linked-list","title":"Odd Even Linked List","description":"\u63cf\u8ff0","source":"@site/docs/linked-list/odd-even-linked-list.md","sourceDirName":"linked-list","slug":"/linked-list/odd-even-linked-list","permalink":"/en/linked-list/odd-even-linked-list","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Odd Even Linked List"},"sidebar":"docs","previous":{"title":"Reverse Linked List II","permalink":"/en/linked-list/reverse-linked-list-ii"},"next":{"title":"Add Two Numbers","permalink":"/en/linked-list/add-two-numbers"}}');var i=d(74848),s=d(28453);const l={title:"Odd Even Linked List"},o=void 0,r={},a=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3}];function c(e){const n={code:"code",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h3,{id:"\u63cf\u8ff0",children:"\u63cf\u8ff0"}),"\n",(0,i.jsx)(n.p,{children:"Given a singly linked list, group all odd nodes together followed by the even nodes. Please note here we are talking about the node number and not the value in the nodes."}),"\n",(0,i.jsxs)(n.p,{children:["You should try to do it in place. The program should run in ",(0,i.jsx)(n.code,{children:"O(1)"})," space complexity and ",(0,i.jsx)(n.code,{children:"O(n)"})," time complexity."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsxs)(n.p,{children:["Given ",(0,i.jsx)(n.code,{children:"1->2->3->4->5->NULL"}),","]}),"\n",(0,i.jsxs)(n.p,{children:["return ",(0,i.jsx)(n.code,{children:"1->3->5->2->4->NULL"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Note"}),":"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"The relative order inside both the even and odd groups should remain as it was in the input."}),"\n",(0,i.jsx)(n.li,{children:"The first node is considered odd, the second node even and so on ..."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"\u5206\u6790",children:"\u5206\u6790"}),"\n",(0,i.jsx)(n.p,{children:"\u4e00\u6b21\u904d\u5386\uff0c\u5728\u904d\u5386\u7684\u8fc7\u7a0b\u4e2d\u4ea4\u53c9\u8d4b\u503c\uff0c\u6700\u540e\u628a\u5947\u6570\u94fe\u8868\u7684\u5c3e\u5df4\u8fde\u63a5\u5230\u5076\u6570\u94fe\u8868\u7684\u5934\u90e8\u3002"}),"\n",(0,i.jsx)(n.h3,{id:"\u4ee3\u7801",children:"\u4ee3\u7801"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"// Odd Even Linked List\n// Time Complexity: O(n), Space Complexity: O(1)\npublic class Solution {\n    public ListNode oddEvenList(ListNode head) {\n        if (head == null) return null;\n        // head and odd are the head pointer and tail pointer of odd list\n        // evenHead and even are the head pointer and tail pointer of even list\n        ListNode odd = head, even = head.next, evenHead = even;\n        while (even != null && even.next != null) {\n            odd.next = even.next;\n            odd = odd.next;\n            even.next = odd.next;\n            even = even.next;\n        }\n        odd.next = evenHead;\n        return head;\n    }\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,n,d)=>{d.d(n,{R:()=>l,x:()=>o});var t=d(96540);const i={},s=t.createContext(i);function l(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);